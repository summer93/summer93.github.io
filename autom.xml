<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>summer&#39;博客</title>
  <icon>https://www.gravatar.com/avatar/a83520973e9b7a2ff68cb8073f4cd236</icon>
  <subtitle>It&#39;s my blog</subtitle>
  <link href="/autom.xml" rel="self"/>
  
  <link href="http://midsummer.com/"/>
  <updated>2017-12-07T12:08:58.000Z</updated>
  <id>http://midsummer.com/</id>
  
  <author>
    <name>summer</name>
    <email>mcdull9393@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python-interface 接口</title>
    <link href="http://midsummer.com/2017/12/07/Python%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>http://midsummer.com/2017/12/07/Python字符编码/</id>
    <published>2017-12-07T00:07:27.000Z</published>
    <updated>2017-12-07T12:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在python2 中str存的是bytes数据，unicode存的是unicdoe编码后的二进制数据，</li><li>在python3 中str存的是unicode数据，bytes存的是bytes数据</li></ul><a id="more"></a><ul><li>在python2 中str存的是bytes数据，unicode存的是unicdoe编码后的二进制数据，</li><li>在python3 中str存的是unicode数据，bytes存的是bytes数据</li></ul><p>在python2 中混淆了bytes 和 unicode数据，u’hello’ + ‘hi’ 不会报错，结果为一个unicode数据<br>而在python3中严格区分了unicode和bytes数据，字节和字符类型，再混用直接报错，’hello’ + b’hi’ 不能相加 会报错</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;在python2 中str存的是bytes数据，unicode存的是unicdoe编码后的二进制数据，&lt;/li&gt;
&lt;li&gt;在python3 中str存的是unicode数据，bytes存的是bytes数据&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python-interface 接口</title>
    <link href="http://midsummer.com/2017/12/04/Python-interface%20%E6%8E%A5%E5%8F%A3/"/>
    <id>http://midsummer.com/2017/12/04/Python-interface 接口/</id>
    <published>2017-12-04T02:48:27.000Z</published>
    <updated>2017-12-04T02:57:17.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在python中并没有像java中有interface接口，在python中只能用类来模拟接口的概念, 用抽象类来实现，用abc模块实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from abc import ABCMeta, abstractmethod</span><br><span class="line"></span><br><span class="line">class IStream(metaclass=ABCMeta):</span><br><span class="line">    @abstractmethod</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>在python中并没有像java中有interface接口，在python中只能用类来模拟接口的概念, 用抽象类来实现，用abc模块实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from abc import ABCMeta, abstractmethod</span><br><span class="line"></span><br><span class="line">class IStream(metaclass=ABCMeta):</span><br><span class="line">    @abstractmethod</span><br><span class="line">    def read(self):</span><br><span class="line">        pass</span><br><span class="line">    @abstractmethod</span><br><span class="line">    def write(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">class SocketStream(IStream):</span><br><span class="line"></span><br><span class="line">    def read(self):</span><br><span class="line">        return &quot;It&apos;s read&quot;</span><br><span class="line"></span><br><span class="line">    def write(self):</span><br><span class="line">        return &quot;It&apos;s write&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;在python中并没有像java中有interface接口，在python中只能用类来模拟接口的概念, 用抽象类来实现，用abc模块实现&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from abc import ABCMeta, abstractmethod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class IStream(metaclass=ABCMeta):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @abstractmethod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>生成随机验证码图片</title>
    <link href="http://midsummer.com/2017/01/08/%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E9%AA%8C%E8%AF%81%E7%A0%81%E5%9B%BE%E7%89%87/"/>
    <id>http://midsummer.com/2017/01/08/生成随机验证码图片/</id>
    <published>2017-01-08T10:45:57.000Z</published>
    <updated>2017-11-17T01:31:48.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装 PIL模块<ul><li>pip3 install pillow</li></ul></li></ul><ul><li>生成 图片<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img = Image.new(mode=&apos;RGB&apos;,size=(120,30),color=(0,255,255))</span><br><span class="line"></span><br><span class="line"># 查看 图片</span><br><span class="line"># img.show()</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="生成随机验证码图片"><a href="#生成随机验证码图片" class="headerlink" title="生成随机验证码图片"></a>生成随机验证码图片</h3><ul><li>安装 PIL模块<ul><li>pip3 install pillow</li></ul></li></ul><ul><li><p>生成 图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img = Image.new(mode=&apos;RGB&apos;,size=(120,30),color=(0,255,255))</span><br><span class="line"></span><br><span class="line"># 查看 图片</span><br><span class="line"># img.show()</span><br><span class="line"></span><br><span class="line"># 保存 图片 到本地</span><br><span class="line"></span><br><span class="line">with open(&apos;code.png&apos;,&apos;wb&apos;) as f:</span><br><span class="line">img.save(f,format=&apos;png&apos;)</span><br></pre></td></tr></table></figure></li><li><p>创建画笔，在图片上画内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image,ImageDraw</span><br><span class="line"></span><br><span class="line">img = Image.new(mode=&apos;RGB&apos;,size=(120,30),color=(0,255,255))</span><br><span class="line"></span><br><span class="line">draw = ImageDraw.Draw(img,mode=&apos;RGB&apos;)</span><br><span class="line"></span><br><span class="line"># 画点</span><br><span class="line">draw.point([100,10],fill=&apos;red&apos;)</span><br><span class="line">draw.point([100, 20], fill=&apos;red&apos;)</span><br><span class="line">draw.point([100, 25], fill=&apos;red&apos;)</span><br><span class="line"></span><br><span class="line"># 画线</span><br><span class="line">draw.line((10,10,100,20),fill=(255,0,255))</span><br><span class="line"></span><br><span class="line"># 画圆</span><br><span class="line">draw.arc((0,0,30,20),0,360,fill=&apos;red&apos;)</span><br><span class="line"></span><br><span class="line"># 写文字</span><br><span class="line">draw.text([0,0],&apos;python&apos;,&apos;red&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 加入特殊字体</span><br><span class="line">from PIL import ImageFont</span><br><span class="line">font = ImageFont.truetype(&apos;kumo.ttf&apos;,28)</span><br><span class="line"></span><br><span class="line">draw.text([0,0],&apos;python&apos;,&apos;red&apos;，font=font)</span><br></pre></td></tr></table></figure></li><li><p>上面 是把生成写入本地 这种方法是不好的，应该把这个图片写入到内存里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image,ImageDraw,ImageFont</span><br><span class="line"></span><br><span class="line">from io import BytesIO</span><br><span class="line"></span><br><span class="line">f = BytesIO()</span><br><span class="line"></span><br><span class="line">img = Image.new(mode=&apos;RGB&apos;,size=(120,30),color=(0,255,255))</span><br><span class="line"></span><br><span class="line">draw = ImageDraw.Draw(img,mode=&apos;RGB&apos;)</span><br><span class="line"></span><br><span class="line"># .......</span><br><span class="line"></span><br><span class="line">img.save(f,&apos;png&apos;)</span><br><span class="line"># 取图片</span><br><span class="line">data = f.getvalue()</span><br></pre></td></tr></table></figure></li><li><p>生成随机验证码图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def check_code(request):</span><br><span class="line"></span><br><span class="line">    from io import BytesIO</span><br><span class="line">    from utils.random_check_code import rd_check_code</span><br><span class="line">    img,code = rd_check_code()</span><br><span class="line">    stream = BytesIO()</span><br><span class="line">    img.save(stream,&apos;png&apos;)</span><br><span class="line">    request.session[&apos;code&apos;] = code</span><br><span class="line"></span><br><span class="line">    return HttpResponse(stream.getvalue())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># random_check_code.py</span><br><span class="line">from PIL import Image,ImageDraw,ImageFont,ImageFilter</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line">def rd_check_code(width=120, height=30, char_length=5, font_file=&apos;kumo.ttf&apos;, font_size=28):</span><br><span class="line">    code = []</span><br><span class="line">    img = Image.new(mode=&apos;RGB&apos;, size=(width, height), color=(255, 255, 255))</span><br><span class="line">    draw = ImageDraw.Draw(img, mode=&apos;RGB&apos;)</span><br><span class="line"></span><br><span class="line">    def rndChar():</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        生成随机字母</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        return chr(random.randint(65, 90))</span><br><span class="line"></span><br><span class="line">    def rndColor():</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        生成随机颜色</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255))</span><br><span class="line"></span><br><span class="line">    # 写文字</span><br><span class="line">    font = ImageFont.truetype(font_file, font_size)</span><br><span class="line">    for i in range(char_length):</span><br><span class="line">        char = rndChar()</span><br><span class="line">        code.append(char)</span><br><span class="line">        h = random.randint(0, 4)</span><br><span class="line">        draw.text([i * width / char_length, h], char, font=font, fill=rndColor())</span><br><span class="line"></span><br><span class="line">    # 写干扰点</span><br><span class="line">    for i in range(40):</span><br><span class="line">        draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor())</span><br><span class="line"></span><br><span class="line">    # 写干扰圆圈</span><br><span class="line">    for i in range(40):</span><br><span class="line">        draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor())</span><br><span class="line">        x = random.randint(0, width)</span><br><span class="line">        y = random.randint(0, height)</span><br><span class="line">        draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor())</span><br><span class="line"></span><br><span class="line">    # 画干扰线</span><br><span class="line">    for i in range(5):</span><br><span class="line">        x1 = random.randint(0, width)</span><br><span class="line">        y1 = random.randint(0, height)</span><br><span class="line">        x2 = random.randint(0, width)</span><br><span class="line">        y2 = random.randint(0, height)</span><br><span class="line"></span><br><span class="line">        draw.line((x1, y1, x2, y2), fill=rndColor())</span><br><span class="line"></span><br><span class="line">    img = img.filter(ImageFilter.EDGE_ENHANCE_MORE)</span><br><span class="line">    return img,&apos;&apos;.join(code)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;安装 PIL模块&lt;ul&gt;
&lt;li&gt;pip3 install pillow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;生成 图片&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from PIL import Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = Image.new(mode=&amp;apos;RGB&amp;apos;,size=(120,30),color=(0,255,255))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 查看 图片&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# img.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MySQl-SQLAlchemy04</title>
    <link href="http://midsummer.com/2016/12/09/MySQL-SQLAchemy04/"/>
    <id>http://midsummer.com/2016/12/09/MySQL-SQLAchemy04/</id>
    <published>2016-12-09T00:30:27.000Z</published>
    <updated>2017-11-15T02:46:28.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>ORM技术:<br>  Object_Relational Mapping 把关系数据库的表结构映射到对象上。</p></li><li><p>SQLAlchemy:<br> SQLalchemy 是python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果。</p></li></ul><a id="more"></a><h3 id="MySQl-SQLAlchemy04"><a href="#MySQl-SQLAlchemy04" class="headerlink" title="MySQl-SQLAlchemy04"></a>MySQl-SQLAlchemy04</h3><ul><li><p>ORM技术:<br>  Object_Relational Mapping 把关系数据库的表结构映射到对象上。</p></li><li><p>SQLAlchemy:<br> SQLalchemy 是python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from sqlalchemy import create_engine</span><br><span class="line"></span><br><span class="line">engine = create_engine(&quot;mysql+pymysql://root:ab931019@127.0.0.1:3306/day0613?charset=utf8&quot;, max_overflow=5)</span><br><span class="line"></span><br><span class="line">cur =engine.execute(&apos;show databases&apos;)</span><br><span class="line"></span><br><span class="line">res = cur.fetchall()</span><br><span class="line"></span><br><span class="line">for row in res:</span><br><span class="line">    print(row[0])</span><br></pre></td></tr></table></figure><ul><li>ORM功能使用：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">from sqlalchemy.ext.declarative import declarative_base</span><br><span class="line">from sqlalchemy import Column, Integer, String, ForeignKey, UniqueConstraint, Index, VARCHAR</span><br><span class="line">from sqlalchemy.orm import sessionmaker, relationship</span><br><span class="line">from sqlalchemy import create_engine</span><br><span class="line"></span><br><span class="line"># engine = create_engine(&quot;mysql+pymysql://root:ab931019@127.0.0.1:3306/day0613?charset=utf8&quot;, max_overflow=5)</span><br><span class="line"></span><br><span class="line"># cur = engine.execute(</span><br><span class="line">#     &quot;insert into users(name,email,user_type_id) values(&apos;ddddddd&apos;,&apos;dddssssss&apos;,3)&quot;</span><br><span class="line"># )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line">class User(Base):</span><br><span class="line">    __tablename__ = &apos;usersinfo&apos;</span><br><span class="line">    id = Column(Integer,primary_key=True)</span><br><span class="line">    name = Column(String(32))</span><br><span class="line">    age = Column(Integer)</span><br><span class="line"></span><br><span class="line">    __table_args__=(</span><br><span class="line">        UniqueConstraint(&apos;id&apos;,&apos;name&apos;,name=&apos;uix_id_name&apos;),</span><br><span class="line">        Index(&apos;ix_id_name&apos;,&apos;id&apos;,&apos;name&apos;),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#一对多</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UserType(Base):</span><br><span class="line">    __tablename__ = &apos;usertype&apos;</span><br><span class="line">    id = Column(Integer, primary_key=True, autoincrement=True)</span><br><span class="line">    title = Column(VARCHAR(32), nullable=True, index=True)</span><br><span class="line"></span><br><span class="line">class Users(Base):</span><br><span class="line">    __tablename__ = &apos;users&apos;</span><br><span class="line">    id = Column(Integer, primary_key=True, autoincrement=True)</span><br><span class="line">    name = Column(VARCHAR(32), nullable=True, index=True)</span><br><span class="line">    email = Column(VARCHAR(16), unique=True)</span><br><span class="line">    user_type_id = Column(Integer,ForeignKey(&quot;usertype.id&quot;))</span><br><span class="line"></span><br><span class="line">    user_type = relationship(&quot;UserType&quot;,backref=&apos;xxoo&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 多对多</span><br><span class="line"></span><br><span class="line">class Group(Base):</span><br><span class="line">    __tablename__ = &apos;group&apos;</span><br><span class="line">    id = Column(Integer, primary_key=True)</span><br><span class="line">    name = Column(String(64), unique=True, nullable=False)</span><br><span class="line">    port = Column(Integer, default=22)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Server(Base):</span><br><span class="line">    __tablename__ = &apos;server&apos;</span><br><span class="line"></span><br><span class="line">    id = Column(Integer, primary_key=True, autoincrement=True)</span><br><span class="line">    hostname = Column(String(64), unique=True, nullable=False)</span><br><span class="line"></span><br><span class="line">class ServerToGroup(Base):</span><br><span class="line">    __tablename__ = &apos;servertogroup&apos;</span><br><span class="line">    nid = Column(Integer, primary_key=True,autoincrement=True)</span><br><span class="line">    server_id = Column(Integer, ForeignKey(&apos;server.id&apos;))</span><br><span class="line">    group_id = Column(Integer, ForeignKey(&apos;group.id&apos;))</span><br><span class="line"></span><br><span class="line">def init_db():</span><br><span class="line">    Base.metadata.create_all(engine)</span><br><span class="line">def drop_db():</span><br><span class="line">    Base.metadata.drop_all(engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">engine = create_engine(&quot;mysql+pymysql://root:ab931019@127.0.0.1:3306/day0613?charset=utf8&quot;, max_overflow=5)</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line"></span><br><span class="line">session = sessionmaker(bind=engine)</span><br><span class="line">session = session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type_list =session.query(UserType)</span><br><span class="line">for row in type_list:</span><br><span class="line">    print(row.id,row.title,row.xxoo[0].name)</span><br><span class="line"></span><br><span class="line">print(&apos;&apos;.center(100,&apos;-&apos;))</span><br><span class="line"></span><br><span class="line">type_list =session.query(Users)</span><br><span class="line">for row in type_list:</span><br><span class="line">    print(row.id,row.name,row.user_type.title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#增</span><br><span class="line"></span><br><span class="line"># obj1 = UserType(title=&apos;普通用户&apos;)</span><br><span class="line"># session.add(obj1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># objs = [</span><br><span class="line">#     UserType(title=&apos;超级用户&apos;),</span><br><span class="line">#     UserType(title=&apos;白金用户&apos;),</span><br><span class="line">#     UserType(title=&apos;黑金用户&apos;)</span><br><span class="line"># ]</span><br><span class="line"># session.add_all(objs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 删</span><br><span class="line"></span><br><span class="line"># session.query(UserType.id,UserType.title).filter(UserType.id &lt;= 2).delete()</span><br><span class="line"></span><br><span class="line"># 改</span><br><span class="line"></span><br><span class="line"># session.query(UserType.id,UserType.title).filter(UserType.id == 3).update(&#123;&apos;title&apos;:&apos;黑金黑金&apos;&#125;)</span><br><span class="line"># session.query(UserType.id,UserType.title).filter(UserType.id &gt;2).update(&#123;UserType.title:UserType.title+&apos;xx&apos;&#125;,synchronize_session=False)</span><br><span class="line"># session.query(UserType.id,UserType.title).filter(UserType.id &gt; 2).update(&#123;&apos;num&apos;:User.num+1&#125;,synchronize_session=&apos;evaluate&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session.commit()</span><br><span class="line">session.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;ORM技术:&lt;br&gt;  Object_Relational Mapping 把关系数据库的表结构映射到对象上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQLAlchemy:&lt;br&gt; SQLalchemy 是python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://midsummer.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQl操作整理01</title>
    <link href="http://midsummer.com/2016/12/09/MySQl%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%8601.md/"/>
    <id>http://midsummer.com/2016/12/09/MySQl操作整理01.md/</id>
    <published>2016-12-09T00:30:27.000Z</published>
    <updated>2017-11-15T03:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>连接数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u [useename] -p</span><br><span class="line">mysql -u [username] -h [host] -p</span><br></pre></td></tr></table></figure></li><li><p>用户管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;spring&apos;@&apos;192.168.1.1&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;192.168.1.%&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;%&apos; identified by &apos;123&apos;;</span><br><span class="line"></span><br><span class="line">drop user &apos;spring&apos;@&apos;%&apos;;</span><br><span class="line">rename user &apos;spring&apos;@&apos;%&apos; to &apos;new_spring&apos;@&apos;%&apos;;</span><br><span class="line">set password for &apos;spring&apos;@&apos;%&apos; = password(&apos;ab123&apos;);</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>连接数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u [useename] -p</span><br><span class="line">mysql -u [username] -h [host] -p</span><br></pre></td></tr></table></figure></li><li><p>用户管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;spring&apos;@&apos;192.168.1.1&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;192.168.1.%&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;%&apos; identified by &apos;123&apos;;</span><br><span class="line"></span><br><span class="line">drop user &apos;spring&apos;@&apos;%&apos;;</span><br><span class="line">rename user &apos;spring&apos;@&apos;%&apos; to &apos;new_spring&apos;@&apos;%&apos;;</span><br><span class="line">set password for &apos;spring&apos;@&apos;%&apos; = password(&apos;ab123&apos;);</span><br></pre></td></tr></table></figure></li><li><p>权限管理：</p></li></ul><!-- more --><h3 id="MySQl操作整理01"><a href="#MySQl操作整理01" class="headerlink" title="MySQl操作整理01"></a>MySQl操作整理01</h3><ul><li><p>连接数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u [useename] -p</span><br><span class="line">mysql -u [username] -h [host] -p</span><br></pre></td></tr></table></figure></li><li><p>用户管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;spring&apos;@&apos;192.168.1.1&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;192.168.1.%&apos; identified by &apos;123&apos;;</span><br><span class="line">create user &apos;spring&apos;@&apos;%&apos; identified by &apos;123&apos;;</span><br><span class="line"></span><br><span class="line">drop user &apos;spring&apos;@&apos;%&apos;;</span><br><span class="line">rename user &apos;spring&apos;@&apos;%&apos; to &apos;new_spring&apos;@&apos;%&apos;;</span><br><span class="line">set password for &apos;spring&apos;@&apos;%&apos; = password(&apos;ab123&apos;);</span><br></pre></td></tr></table></figure></li><li><p>权限管理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant select,insert,update on db1.t1 to &apos;spring&apos;@&apos;%&apos;;</span><br><span class="line">grant all privileges on db1.t1 to &apos;spring&apos;@&apos;%&apos;;</span><br><span class="line">revoke all privileges on db1.t1 from &apos;spring&apos;@&apos;%&apos;;</span><br></pre></td></tr></table></figure></li><li><p>数据库操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create database db1 default charset=utf8;</span><br><span class="line">create database db1 default charset utf8;</span><br><span class="line">drop database db1;</span><br><span class="line"></span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure></li></ul><p>–</p><p>####对数据表的操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">create table t1(</span><br><span class="line">列名 类型 null,</span><br><span class="line">列名 类型 not null,</span><br><span class="line">列名 类型 not null auto_increment primary key,</span><br><span class="line">id int,</span><br><span class="line">name char(10)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"># innodb  支持事物，原子性操作 ****</span><br><span class="line"># myisam</span><br><span class="line">not null：是否为空</span><br><span class="line">auto_increment  表示自增</span><br><span class="line"></span><br><span class="line">primary key  主键表示约束(不能重复且不能为空)；加速查找；加速查找</span><br><span class="line">一个表只能有一个主键</span><br><span class="line">主键可以由多列组成</span><br><span class="line">create table t2(</span><br><span class="line">nid int(11) not null auto_increment,</span><br><span class="line">pid int(11) not null,</span><br><span class="line">num int(11),</span><br><span class="line">primary key(nid,pid)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table t3(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">name char(10),</span><br><span class="line">id1 int,</span><br><span class="line">id2 int,</span><br><span class="line">constraint fk_t3_t2 foreign key(id1,id2) reference t2(nid,pid)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">外键:</span><br><span class="line">create table department(</span><br><span class="line">id bigint auto_increment primary key,</span><br><span class="line">title char(15)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">create table userinfo(</span><br><span class="line">uid bigint auto_incremant peimary,</span><br><span class="line">name varchar(32),</span><br><span class="line">department_id int,</span><br><span class="line">constraint fk_user_depar foreign key (department_id) reference color(id)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">清空表:</span><br><span class="line">delete from t1;</span><br><span class="line">truncate table t1; #清除auto_increment自增</span><br><span class="line">删除表:</span><br><span class="line">drop table t1;</span><br><span class="line"></span><br><span class="line">修改表:</span><br><span class="line">添加列: alter table 表名 add 列名 类型;</span><br><span class="line">删除列: alter table 表名 drop column  列名；</span><br><span class="line">修改列:</span><br><span class="line">   alter table 表名 modify column 列名 类型; -- 类型</span><br><span class="line">   alter table 表名 change 原列名 新列名 类型；-- 列名,类型</span><br><span class="line">添加主键:</span><br><span class="line">   alter table 表名 add primary key(列名)</span><br><span class="line">删除主键:</span><br><span class="line">   alter table 表名 drop primary key;</span><br><span class="line">   alter table 表名 modify 列名 int, drop primary key;</span><br><span class="line">添加外键:</span><br><span class="line">   alter table 从表 add constraint 外键名(形如:FK_从表_主表) foreign key 从表(外键字段) references 主键(主键字段)；</span><br><span class="line">删除外键:</span><br><span class="line">   alter table 表名 drop foreign key 外键名称</span><br><span class="line">修改默认值：</span><br><span class="line">   alter table 表名 auto_increment=20;</span><br><span class="line">查看表结构:</span><br><span class="line">desc t1;</span><br><span class="line">查看创建表信息:</span><br><span class="line">show create table t1;</span><br></pre></td></tr></table></figure></p><p>####数据类型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">数据类型:</span><br><span class="line">数字、字符串、时间类型</span><br><span class="line">数字:</span><br><span class="line">tinyint</span><br><span class="line">int</span><br><span class="line">bigint</span><br><span class="line"></span><br><span class="line">float</span><br><span class="line">double</span><br><span class="line">decimal</span><br><span class="line">字符串:</span><br><span class="line">char(10)    速度快 (10)示10个字符</span><br><span class="line">varchar(10) 节省空间</span><br><span class="line">PS:创建数据表长列往前放</span><br><span class="line">时间类型</span><br><span class="line">datetime</span><br><span class="line">enum</span><br><span class="line">set</span><br><span class="line">create table t1(</span><br><span class="line">id int signed auto_increment primary key,</span><br><span class="line">num decimal(10,5),</span><br><span class="line">name char(10)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line">#拿tinyint字段来举例，unsigned后，字段的取值范围是0~255，而signed的范围是-128~127</span><br></pre></td></tr></table></figure></p><p>####对数据行进行操作:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">insert into t1(name,age) values(&apos;autumn&apos;,18),(&apos;spring&apos;,19);</span><br><span class="line">insert into t1(name,age) select name,age from tb2;</span><br><span class="line"></span><br><span class="line">delete from t1 where id &gt;6;</span><br><span class="line">delete from t1 where id != 6;</span><br><span class="line">truncate table t1; #清除auto_increment自增</span><br><span class="line"></span><br><span class="line">update t1 set name=&apos;root&apos; where id=5;</span><br><span class="line">update t1 set name =&apos;autumn&apos; where id=6 and age=18;</span><br><span class="line"></span><br><span class="line">select * from t1;</span><br><span class="line">select id,name from t1;</span><br></pre></td></tr></table></figure><p>##查询操作</p><ul><li>临时表：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select num,course_id from (select num,course_id from score where num &gt;60) as B;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">select * from t1;</span><br><span class="line">select * from t1 where id=1;</span><br><span class="line">select * from t1 where id!=2;</span><br><span class="line">select * from t1 where id &gt;2;</span><br><span class="line">select * from t1 where id &gt;=2 and name=&apos;spring&apos;;</span><br><span class="line">select name,age from t1;</span><br><span class="line">select * from t1 where id in (1,2,3);</span><br><span class="line">select * from t1 where id not in (1,2,3);</span><br><span class="line">select * from t1 where id in (select id from t2);</span><br><span class="line">select * from t1 where id between 5 and 12;包括2和12</span><br><span class="line"></span><br><span class="line">通配符:</span><br><span class="line">  select * from t1 where name like &quot;a%&quot;</span><br><span class="line">  select * from t1 where name like &quot;a_&quot;</span><br><span class="line">分页:</span><br><span class="line">select * from t1 limit 10;</span><br><span class="line">select * from t1 limit 0,10;</span><br><span class="line">select * from t1 limit 10,10;</span><br><span class="line"></span><br><span class="line">select * from t1 limit 2 offset 4; 从第5个开始往后2个</span><br><span class="line"></span><br><span class="line">排序:</span><br><span class="line">select * from t1 order by id desc;从大到小</span><br><span class="line">select * from t1 order by id asc; 从小到大</span><br><span class="line">select * from t2 order by id desc, age asc;</span><br><span class="line">distinct:</span><br><span class="line">select DISTINCT student_id from score where num &lt; 60</span><br><span class="line"></span><br><span class="line">取最后5条数据</span><br><span class="line">select * from t1 order by id desc limit 5;</span><br><span class="line"></span><br><span class="line">分组:</span><br><span class="line">select  count(1),max(id),part_id from userinfo group by part_id;</span><br><span class="line"></span><br><span class="line">count()</span><br><span class="line">max()</span><br><span class="line">min()</span><br><span class="line">sum()</span><br><span class="line">avg()</span><br><span class="line">*******如果对聚合函数进行二次筛选时，必须使用having******</span><br><span class="line">select count(1),max(id),part_id from userinfo group by part_id having count(id) &gt; 1;</span><br><span class="line">select count(id),part_id from userinfo where id &gt;0 group by part_id having count(id) &gt; 1;</span><br><span class="line"></span><br><span class="line">连表操作:</span><br><span class="line">select * from userinfo,department;笛卡尔基</span><br><span class="line">select * from userinfo,department where userinfo.uid =department.id</span><br><span class="line">select * from userinfo left join department on userinf.uid = department.id(在之前版本的myqsl中 这两种方式是有性能差别，但是在现在版本的mysql中性能是一样的，推荐用 left join 的方法)</span><br><span class="line">select * from userinfo right join department on userinfo.uid = department.id</span><br><span class="line">left:左边表全显示，right:右边全显示</span><br><span class="line"></span><br><span class="line">select * from userinfo inner join department on userinfo.uid = department.id</span><br><span class="line">将出现null的一行隐藏</span><br><span class="line"></span><br><span class="line">select * from</span><br><span class="line">department5</span><br><span class="line">left join userinfo5 on userinfo5.part_id =department5.id</span><br><span class="line">left join userinfo6 on userinfo5.part_id =department5.id</span><br><span class="line"></span><br><span class="line">select</span><br><span class="line">score.sid,</span><br><span class="line">student.sid</span><br><span class="line">from</span><br><span class="line">score</span><br><span class="line">left join student on score.student_id = student.sid</span><br><span class="line">        left join course on score.course_id = course.cid</span><br><span class="line">left join class on student.class_id = class.cid</span><br><span class="line">left join teacher on course.teacher_id=teacher.tid</span><br><span class="line"></span><br><span class="line">select count(id) from userinfo;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">    nid = models.BigAutoField(primary_key=True)</span><br><span class="line">    username = models.CharField(max_length=32)</span><br><span class="line">    password = models.CharField(max_length=64)</span><br><span class="line">    age = models.IntegerField()#</span><br><span class="line"></span><br><span class="line">➜  task003 git:(master) ✗ python3 manage.py makemigrations</span><br><span class="line">You are trying to add a non-nullable field &apos;age&apos; to userinfo without a default; we can&apos;t do that (the database needs something to populate existing rows).</span><br><span class="line">Please select a fix:</span><br><span class="line"> 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)</span><br><span class="line"> 2) Quit, and let me add a default in models.py</span><br><span class="line">Select an option:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;连接数据库：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -u [useename] -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -u [username] -h [host] -p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户管理：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create user &amp;apos;spring&amp;apos;@&amp;apos;192.168.1.1&amp;apos; identified by &amp;apos;123&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create user &amp;apos;spring&amp;apos;@&amp;apos;192.168.1.%&amp;apos; identified by &amp;apos;123&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create user &amp;apos;spring&amp;apos;@&amp;apos;%&amp;apos; identified by &amp;apos;123&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drop user &amp;apos;spring&amp;apos;@&amp;apos;%&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rename user &amp;apos;spring&amp;apos;@&amp;apos;%&amp;apos; to &amp;apos;new_spring&amp;apos;@&amp;apos;%&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set password for &amp;apos;spring&amp;apos;@&amp;apos;%&amp;apos; = password(&amp;apos;ab123&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://midsummer.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://midsummer.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL整理 -补充02</title>
    <link href="http://midsummer.com/2016/12/09/MySQL%E6%95%B4%E7%90%86%20-%E8%A1%A5%E5%85%8502/"/>
    <id>http://midsummer.com/2016/12/09/MySQL整理 -补充02/</id>
    <published>2016-12-09T00:30:27.000Z</published>
    <updated>2017-11-15T03:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>备份：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">备份：数据表结构＋数据</span><br><span class="line">mysqldump -u root db1 &gt; db1.sql -p</span><br><span class="line">备份：数据表结构</span><br><span class="line">mysqldump -u root -d db1 &gt; db1.sql -p</span><br><span class="line"></span><br><span class="line">执行文件：</span><br><span class="line">create database db2;</span><br><span class="line">mysql -u root -d db5 &lt; db1.sql -p;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="MySQL整理-补充02"><a href="#MySQL整理-补充02" class="headerlink" title="MySQL整理 -补充02"></a>MySQL整理 -补充02</h3><ul><li><p>备份：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">备份：数据表结构＋数据</span><br><span class="line">mysqldump -u root db1 &gt; db1.sql -p</span><br><span class="line">备份：数据表结构</span><br><span class="line">mysqldump -u root -d db1 &gt; db1.sql -p</span><br><span class="line"></span><br><span class="line">执行文件：</span><br><span class="line">create database db2;</span><br><span class="line">mysql -u root -d db5 &lt; db1.sql -p;</span><br></pre></td></tr></table></figure></li><li><p>外键的变种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- 一对多</span><br><span class="line">用户和部门表：</span><br><span class="line">用户：</span><br><span class="line">1. spring      1</span><br><span class="line">2. root          2</span><br><span class="line">3. autumn    3</span><br><span class="line">4. summer    4</span><br><span class="line">部门：</span><br><span class="line">1  服务</span><br><span class="line">2  保安</span><br><span class="line">3  公关</span><br><span class="line">- 一对一</span><br><span class="line">用户和博客表：</span><br><span class="line">用户：</span><br><span class="line">1. spring</span><br><span class="line">2. root</span><br><span class="line">3. autumn</span><br><span class="line">4. summer</span><br><span class="line">博客表:                        fk() ＋unique唯一索引</span><br><span class="line">1  /spring333/        1</span><br><span class="line">2  /root123/           2</span><br><span class="line">3  /zzzzzz/              3</span><br><span class="line">4  /summer1019/    4</span><br><span class="line">- 多对多</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">用户表</span><br><span class="line">主机表</span><br><span class="line">用户主机关系表</span><br><span class="line">create table userinfo2(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">name char(10),</span><br><span class="line">gender char(10),</span><br><span class="line">email varchar(64)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line">create table host(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">hostname char(64)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create table user2host(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">userid int not null,</span><br><span class="line">hostid int not null,</span><br><span class="line">unique uq_user_host (userid,hostid),</span><br><span class="line">CONSTRAINT fk_u2h_user FOREIGN key (userid) REFERENCES userinfo2(id),</span><br><span class="line">CONSTRAINT fk_u2h_host FOREIGN key (hostid) REFERENCES host(id)</span><br><span class="line">)engine=innodb default charset=utf8;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;备份：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;备份：数据表结构＋数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqldump -u root db1 &amp;gt; db1.sql -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;备份：数据表结构&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqldump -u root -d db1 &amp;gt; db1.sql -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;执行文件：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create database db2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -u root -d db5 &amp;lt; db1.sql -p;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://midsummer.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://midsummer.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-索引03</title>
    <link href="http://midsummer.com/2016/12/09/MySQL-%E7%B4%A2%E5%BC%9503/"/>
    <id>http://midsummer.com/2016/12/09/MySQL-索引03/</id>
    <published>2016-12-09T00:30:27.000Z</published>
    <updated>2017-11-15T02:39:28.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>主键索引<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create tabel tb1(</span><br><span class="line">id int auto_increment priamry key,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int not null</span><br><span class="line">)engine=innodb default utf8;</span><br><span class="line"></span><br><span class="line">create tabel tb1(</span><br><span class="line">id int auto_increment,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int not null，</span><br><span class="line">primary key (id)</span><br><span class="line">)engine=innodb default utf8;</span><br><span class="line"></span><br><span class="line">添加主键:</span><br><span class="line">   alter table 表名 add primary key(列名)</span><br><span class="line">删除主键:</span><br><span class="line">   alter table 表名 drop primary key;</span><br><span class="line">   alter table 表名 modify 列名 int, drop primary key;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="MySQL-索引03"><a href="#MySQL-索引03" class="headerlink" title="MySQL-索引03"></a>MySQL-索引03</h3><ul><li>主键索引</li><li>普通索引</li><li>唯一索引</li><li>联合(组合)索引<ul><li>联合主键索引</li><li>联合普通索引</li><li>联合唯一索引</li></ul></li></ul><p>－－－－－－－－－－－－－－－－－－－</p><ul><li><p>主键索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create tabel tb1(</span><br><span class="line">id int auto_increment priamry key,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int not null</span><br><span class="line">)engine=innodb default utf8;</span><br><span class="line"></span><br><span class="line">create tabel tb1(</span><br><span class="line">id int auto_increment,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int not null，</span><br><span class="line">primary key (id)</span><br><span class="line">)engine=innodb default utf8;</span><br><span class="line"></span><br><span class="line">添加主键:</span><br><span class="line">   alter table 表名 add primary key(列名)</span><br><span class="line">删除主键:</span><br><span class="line">   alter table 表名 drop primary key;</span><br><span class="line">   alter table 表名 modify 列名 int, drop primary key;</span><br></pre></td></tr></table></figure></li><li><p>普通索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create table tb1(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int(10) not null,</span><br><span class="line">index ix_name (name)</span><br><span class="line">)engine=innodb default charset utf8;</span><br><span class="line"></span><br><span class="line">create index ix_name on tb1(name);</span><br><span class="line">drop index ix_name on tb1;</span><br><span class="line">show index from tb1;</span><br><span class="line"></span><br><span class="line">create index ix_name on tb1(name(2));</span><br><span class="line">如果建立索引的对象是二进制blob()和text类型时，必须像上面这一在括号内指定长度。</span><br></pre></td></tr></table></figure></li><li><p>唯一索引</p><ul><li>唯一约束(不能重复)和加速索引的功能</li><li>唯一索引和主键索引的区别：unique 可以为空null，而primary key 不能为空<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table tb1(</span><br><span class="line">id int auto_increment primary key,</span><br><span class="line">name char(32) not null,</span><br><span class="line">age int(10) not null,</span><br><span class="line">email char(32) not null,</span><br><span class="line">unique ui_email (email)</span><br><span class="line">)</span><br><span class="line">create unique index ui_email on tb1(email);</span><br><span class="line">drop unique index ui_email on tb1;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>组合索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create unique index  ui_index on tb1(name,email);</span><br><span class="line">drop unique index ui_index on tb1;</span><br><span class="line"></span><br><span class="line">如上创建组合索引之后，查询：</span><br><span class="line">name and email  -- 使用索引</span><br><span class="line">name            -- 使用索引</span><br><span class="line">email           -- 不使用索引</span><br><span class="line">注意：对于同时搜索n个条件时，组合索引的性能好于多个单一索引合并。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;主键索引&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create tabel tb1(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	id int auto_increment priamry key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name char(32) not null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age int not null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)engine=innodb default utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create tabel tb1(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	id int auto_increment,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name char(32) not null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age int not null，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	primary key (id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)engine=innodb default utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;添加主键:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   alter table 表名 add primary key(列名)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除主键:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   alter table 表名 drop primary key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   alter table 表名 modify 列名 int, drop primary key;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="http://midsummer.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://midsummer.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>js/jQuery创建新标签</title>
    <link href="http://midsummer.com/2016/12/09/js%7CjQuery%20%E5%88%9B%E5%BB%BA%E6%96%B0%E6%A0%87%E7%AD%BE/"/>
    <id>http://midsummer.com/2016/12/09/js|jQuery 创建新标签/</id>
    <published>2016-12-09T00:30:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>js<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var div = document.getElementById(&quot;div_1&quot;);</span><br><span class="line">var eleA =  document.createElement(&quot;a&quot;);</span><br><span class="line">eleA.setAttribute(&quot;href&quot;, &quot;http://www.baidu.com&quot;);</span><br><span class="line">eleA.innerHTML = &quot;百度&quot;;</span><br><span class="line">div.appendChild(eleA);</span><br><span class="line"></span><br><span class="line">getElementById()</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="js-jQuery创建新标签"><a href="#js-jQuery创建新标签" class="headerlink" title="js/jQuery创建新标签"></a>js/jQuery创建新标签</h3><ul><li>js<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var div = document.getElementById(&quot;div_1&quot;);</span><br><span class="line">var eleA =  document.createElement(&quot;a&quot;);</span><br><span class="line">eleA.setAttribute(&quot;href&quot;, &quot;http://www.baidu.com&quot;);</span><br><span class="line">eleA.innerHTML = &quot;百度&quot;;</span><br><span class="line">div.appendChild(eleA);</span><br><span class="line"></span><br><span class="line">getElementById()</span><br><span class="line">getElementsByTagName()</span><br><span class="line">getElementsByClassName()</span><br><span class="line">getElementsByName()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elementNode.setAttribute(name,value)</span><br><span class="line">elementNode.getAttribute(name)</span><br><span class="line"></span><br><span class="line">elementNode.removeChild(node)</span><br><span class="line"></span><br><span class="line">elementNode.className</span><br><span class="line">elementNode.classList.add</span><br><span class="line">elementNode.classList.remove</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>jQuery<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;&quot;).addClass(class|fn)</span><br><span class="line">$(&quot;&quot;).removeClass([class|fn])</span><br><span class="line"></span><br><span class="line">--------------------------属性</span><br><span class="line">$(&quot;&quot;).attr();</span><br><span class="line">$(&quot;&quot;).removeAttr();</span><br><span class="line">$(&quot;&quot;).prop();</span><br><span class="line">$(&quot;&quot;).removeProp();</span><br><span class="line"></span><br><span class="line">--------------------------HTML代码/文本/值</span><br><span class="line">$(&quot;&quot;).html([val|fn])</span><br><span class="line">$(&quot;&quot;).text([val|fn])</span><br><span class="line">$(&quot;&quot;).val([val|fn|arr])</span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line">$(&quot;#c1&quot;).css(&#123;&quot;color&quot;:&quot;red&quot;,&quot;fontSize&quot;:&quot;35px&quot;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查找所有兄弟标签：    $(&quot;div&quot;).siblings()</span><br><span class="line"></span><br><span class="line">$(&quot;ul li&quot;).hasclass(&quot;test&quot;)</span><br><span class="line"></span><br><span class="line">$(&apos;[id=&quot;div1&quot;]&apos;)   $(&apos;[&quot;alex=&quot;sb&quot;][id]&apos;)</span><br><span class="line"></span><br><span class="line">$(&quot;li:first&quot;)  $(&quot;li:eq(2)&quot;)  $(&quot;li:even&quot;) $(&quot;li:gt(1)&quot;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;js&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var div = document.getElementById(&amp;quot;div_1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var eleA =  document.createElement(&amp;quot;a&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eleA.setAttribute(&amp;quot;href&amp;quot;, &amp;quot;http://www.baidu.com&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;eleA.innerHTML = &amp;quot;百度&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div.appendChild(eleA);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getElementById()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://midsummer.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Django-中间件02</title>
    <link href="http://midsummer.com/2016/11/09/Django-%E4%B8%AD%E9%97%B4%E4%BB%B602/"/>
    <id>http://midsummer.com/2016/11/09/Django-中间件02/</id>
    <published>2016-11-09T01:39:28.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line">from django.shortcuts import HttpResponse</span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br></pre></td></tr></table></figure><a id="more"></a><p>接着Django-中间件01</p><hr><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line">from django.shortcuts import HttpResponse</span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">        # response = callback(request,*callback_args, **callback_kwargs)</span><br><span class="line">        # return response</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m1.process_exception&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m2.process_view&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m2.process_exception&apos;)</span><br><span class="line">        return HttpResponse(&apos;有错误！&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 不会报错</span><br><span class="line"></span><br><span class="line"># 输出结果</span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">m2.process_view</span><br><span class="line">ok</span><br><span class="line">m2.process_exception</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure><h3 id="process-template-response"><a href="#process-template-response" class="headerlink" title="process_template_response()"></a>process_template_response()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># 对视图函数的返回值有一定的要求，在函数返回值中有render方法才执行。</span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line"></span><br><span class="line">class JsonResponse:</span><br><span class="line">    def __init__(self,req,status,msg):</span><br><span class="line">        self.req = req</span><br><span class="line">        self.status = status</span><br><span class="line">        self.msg = msg</span><br><span class="line">    def render(self):</span><br><span class="line">        import json</span><br><span class="line">        ret = &#123;</span><br><span class="line">            &apos;status&apos;: self.status,</span><br><span class="line">            &apos;msg&apos;: self.msg</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        return HttpResponse(json.dumps(ret))</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line"></span><br><span class="line">    return JsonResponse(request,True,&apos;错误信息！&apos;)</span><br><span class="line"></span><br><span class="line"># md.py</span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line">from django.shortcuts import HttpResponse</span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">        # response = callback(request,*callback_args, **callback_kwargs)</span><br><span class="line">        # return response</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m1.process_exception&apos;)</span><br><span class="line">    def process_template_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_template_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m2.process_view&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m2.process_exception&apos;)</span><br><span class="line">        return HttpResponse(&apos;有错误！&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 输出结果</span><br><span class="line"></span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">m2.process_view</span><br><span class="line">m1.process_template_response</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.utils.deprecation import MiddlewareMixin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.shortcuts import HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class M1(MiddlewareMixin):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def process_request(self,request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;apos;m1.process_request&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django 基础- 路由系统</title>
    <link href="http://midsummer.com/2016/11/09/Django%20%E5%9F%BA%E7%A1%80-%20%E8%B7%AF%E7%94%B1%E7%B3%BB%E7%BB%9F/"/>
    <id>http://midsummer.com/2016/11/09/Django 基础- 路由系统/</id>
    <published>2016-11-09T01:31:27.000Z</published>
    <updated>2017-11-15T02:45:16.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>1.路由系统</li></ul><h3 id="1-单一路由对应"><a href="#1-单一路由对应" class="headerlink" title="1.单一路由对应"></a>1.单一路由对应</h3><pre><code>seo 搜索引擎的录入权重</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for item in user_list %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; item &#125;&#125;|&lt;a href=&quot;/edit/?nid=&#123;&#123; item &#125;&#125;&quot;&gt;编辑&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^index$&apos;, views.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><p>创建Django项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dajngo-admin startproject mysite</span><br></pre></td></tr></table></figure></p><p> 创建app</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp app01</span><br><span class="line">python manage.py startapp app02</span><br></pre></td></tr></table></figure><ul><li>1.路由系统</li></ul><h3 id="1-单一路由对应-1"><a href="#1-单一路由对应-1" class="headerlink" title="1.单一路由对应"></a>1.单一路由对应</h3><pre><code>seo 搜索引擎的录入权重</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for item in user_list %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; item &#125;&#125;|&lt;a href=&quot;/edit/?nid=&#123;&#123; item &#125;&#125;&quot;&gt;编辑&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^index$&apos;, views.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>/?id=XXXX/ 这样get传值，seo优先级不高</p><hr><h3 id="2-基于正则的路由"><a href="#2-基于正则的路由" class="headerlink" title="2.基于正则的路由"></a>2.基于正则的路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for item in user_list %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; item &#125;&#125;|&lt;a href=&quot;/edit/&#123;&#123; item &#125;&#125;&quot;&gt;编辑&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for item in user_list %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; item &#125;&#125;|&lt;a href=&quot;/edit/&#123;&#123; item &#125;&#125;.html&quot;&gt;编辑&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^edit/(\w+)/&apos;, views.edit),</span><br><span class="line">    url(r&apos;^edit/(\w+).html$&apos;, views.edit),</span><br><span class="line">    # 伪静态 seo 权重更高</span><br><span class="line">    # $ 终止符 如果遇到浏览器自动在末尾加/，清除缓存后解决。</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def edit(request,a1):</span><br><span class="line">    return HttpResponse(a1)</span><br></pre></td></tr></table></figure><hr><h3 id="3-带参数的路由"><a href="#3-带参数的路由" class="headerlink" title="3.带参数的路由"></a>3.带参数的路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for item in user_list %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; item &#125;&#125;|&lt;a href=&quot;/edit/&#123;&#123; item &#125;&#125;/33/&quot;&gt;编辑&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^edit/(?P&lt;a1&gt;\w+)/(?P&lt;a2&gt;\w+)/&apos;, views.edit),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def edit(request,a1,a2):</span><br><span class="line"></span><br><span class="line">    return HttpResponse(json.dumps((a1,a2)))</span><br></pre></td></tr></table></figure><hr><h3 id="4-路由分发"><a href="#4-路由分发" class="headerlink" title="4.路由分发"></a>4.路由分发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># urls.py</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^app01/&apos;, include(&apos;app01.urls&apos;)),</span><br><span class="line">]</span><br><span class="line"># app01.urls.py</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^index$&apos;, views.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="5-设置默认页面"><a href="#5-设置默认页面" class="headerlink" title="5.设置默认页面"></a>5.设置默认页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def default(request):</span><br><span class="line">    return HttpResponse(&apos;not find!&apos;)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^&apos;,default),# 放在最后</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="6-为路由映射设置别名"><a href="#6-为路由映射设置别名" class="headerlink" title="6.为路由映射设置别名"></a>6.为路由映射设置别名</h3><pre><code>- 根据别名反向生成url</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">def index(request):</span><br><span class="line">    user_list = [</span><br><span class="line">        &apos;spring&apos;,</span><br><span class="line">        &apos;summer&apos;,</span><br><span class="line">        &apos;autumn&apos;,</span><br><span class="line">        &apos;winter&apos;,</span><br><span class="line">    ]</span><br><span class="line">    v = reverse(&apos;n1&apos;)</span><br><span class="line">    print(v)</span><br><span class="line"></span><br><span class="line">    return render(request,&apos;index.html&apos;,&#123;&apos;user_list&apos;:user_list&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^index/&apos;, views.index,name=&apos;n1&apos;),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&apos;POST&apos; action=&quot;&#123;%url &apos;n1&apos;%&#125;&quot;</span><br><span class="line">...</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def edit(request,a1):</span><br><span class="line">    v = reverse(&apos;n2&apos;,args=(1,))</span><br><span class="line">    print(v)</span><br><span class="line"></span><br><span class="line">    return HttpResponse(json.dumps(a1))</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^edit/(\w+)&apos;, views.edit,name=&apos;n2&apos;),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=&apos;POST&apos; action=&quot;&#123;% url &apos;n1&apos; i %&#125;&quot; #传值</span><br><span class="line">...</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def edit(request,a1,a2):</span><br><span class="line">    v = reverse(&apos;n2&apos;,kwargs=&#123;&apos;a1&apos;:222,&apos;a2&apos;:333&#125;)</span><br><span class="line">    print(v)</span><br><span class="line"></span><br><span class="line">    return HttpResponse(json.dumps((a1,a2)))</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^edit/(?P&lt;a1&gt;\w+)/(?P&lt;a2&gt;\w+)/&apos;,</span><br><span class="line">    views.edit,name=&apos;n2&apos;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;1.路由系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-单一路由对应&quot;&gt;&lt;a href=&quot;#1-单一路由对应&quot; class=&quot;headerlink&quot; title=&quot;1.单一路由对应&quot;&gt;&lt;/a&gt;1.单一路由对应&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;seo 搜索引擎的录入权重
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% for item in user_list %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li&amp;gt;&amp;#123;&amp;#123; item &amp;#125;&amp;#125;|&amp;lt;a href=&amp;quot;/edit/?nid=&amp;#123;&amp;#123; item &amp;#125;&amp;#125;&amp;quot;&amp;gt;编辑&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^index$&amp;apos;, views.index),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>自定义分页</title>
    <link href="http://midsummer.com/2016/11/09/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5/"/>
    <id>http://midsummer.com/2016/11/09/自定义分页/</id>
    <published>2016-11-09T01:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def custom(request):</span><br><span class="line">    current_Page = request.GET.get(&apos;page&apos;)</span><br><span class="line">    current_Page = int(current_Page)</span><br><span class="line"></span><br><span class="line">    per_page = 10</span><br><span class="line"></span><br><span class="line">    start = (current_Page - 1) * per_page</span><br><span class="line">    end = current_Page * per_page</span><br><span class="line"></span><br><span class="line">    user_list = models.UserInfo.objects.all()[start:end]</span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="自定义分页"><a href="#自定义分页" class="headerlink" title="自定义分页"></a>自定义分页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def custom(request):</span><br><span class="line">    current_Page = request.GET.get(&apos;page&apos;)</span><br><span class="line">    current_Page = int(current_Page)</span><br><span class="line"></span><br><span class="line">    per_page = 10</span><br><span class="line"></span><br><span class="line">    start = (current_Page - 1) * per_page</span><br><span class="line">    end = current_Page * per_page</span><br><span class="line"></span><br><span class="line">    user_list = models.UserInfo.objects.all()[start:end]</span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;用户列表&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for row in user_list %&#125;</span><br><span class="line">        &lt;li&gt;&#123;&#123; row.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr><ul><li>改写成类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body &gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;用户列表&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for row in user_list %&#125;</span><br><span class="line">        &lt;li&gt;&#123;&#123; row.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; page_info.pager|safe &#125;&#125;</span><br><span class="line">&#123;#xss攻击#&#125;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">class PageInfo(object):</span><br><span class="line">    def __init__(self,current_Pag,all_count,per_page,show_page=11):</span><br><span class="line">        try:</span><br><span class="line">            self.current_Page = int(current_Pag)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.current_Page = 1</span><br><span class="line">        self.all_count = all_count</span><br><span class="line">        self.per_page = per_page</span><br><span class="line"></span><br><span class="line">        a,b = divmod(all_count,per_page)</span><br><span class="line">        if b:</span><br><span class="line">            a = a + 1</span><br><span class="line">        self.all_pager = a</span><br><span class="line">        self.show_page = show_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def start(self):</span><br><span class="line">        return (self.current_Page - 1) * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def end(self):</span><br><span class="line">        return self.current_Page * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def pager(self):</span><br><span class="line">        page_list = []</span><br><span class="line">        half = int((self.show_page-1)/2)</span><br><span class="line"></span><br><span class="line">        begin = self.current_Page - half</span><br><span class="line">        stop = self.current_Page + half</span><br><span class="line">        for i in range(begin,stop+1):</span><br><span class="line">            if i == self.current_Page:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;color:red&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            else:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;display: inline;margin: 5px;padding: 5px&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            page_list.append(temp)</span><br><span class="line">        return &apos;&apos;.join(page_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def custom(request):</span><br><span class="line">    all_count = models.UserInfo.objects.all().count()</span><br><span class="line">    page_info =PageInfo(request.GET.get(&apos;page&apos;),all_count,10)</span><br><span class="line">    user_list = models.UserInfo.objects.all()[page_info.start:page_info.end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list,&apos;page_info&apos;:page_info&#125;)</span><br></pre></td></tr></table></figure><hr><ul><li>解决总页数 小于 show_page</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">class PageInfo(object):</span><br><span class="line">    def __init__(self,current_Pag,all_count,per_page,show_page=11):</span><br><span class="line">        try:</span><br><span class="line">            self.current_Page = int(current_Pag)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.current_Page = 1</span><br><span class="line">        self.all_count = all_count</span><br><span class="line">        self.per_page = per_page</span><br><span class="line"></span><br><span class="line">        a,b = divmod(all_count,per_page)</span><br><span class="line">        if b:</span><br><span class="line">            a = a + 1</span><br><span class="line">        self.all_pager = a</span><br><span class="line">        self.show_page = show_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def start(self):</span><br><span class="line">        return (self.current_Page - 1) * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def end(self):</span><br><span class="line">        return self.current_Page * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def pager(self):</span><br><span class="line">        page_list = []</span><br><span class="line">        half = int((self.show_page-1)/2)</span><br><span class="line">        if self.all_pager &lt; self.show_page:</span><br><span class="line">            begin = 1</span><br><span class="line">            stop = self.all_pager</span><br><span class="line">        else:</span><br><span class="line">            begin = self.current_Page - half</span><br><span class="line">            stop = self.current_Page + half</span><br><span class="line">        for i in range(begin,stop+1):</span><br><span class="line">            if i == self.current_Page:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;color:red&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            else:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;display: inline;margin: 5px;padding: 5px&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            page_list.append(temp)</span><br><span class="line">        return &apos;&apos;.join(page_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def custom(request):</span><br><span class="line">    all_count = models.UserInfo.objects.filter(id__lt=22).count()</span><br><span class="line">    page_info =PageInfo(request.GET.get(&apos;page&apos;),all_count,10)</span><br><span class="line">    user_list = models.UserInfo.objects.filter(id__lt=22)[page_info.start:page_info.end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list,&apos;page_info&apos;:page_info&#125;)</span><br></pre></td></tr></table></figure><hr><ul><li>解决选择开始几个页吗出现的问题</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">class PageInfo(object):</span><br><span class="line">    def __init__(self,current_Pag,all_count,per_page,show_page=11):</span><br><span class="line">        try:</span><br><span class="line">            self.current_Page = int(current_Pag)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.current_Page = 1</span><br><span class="line">        self.all_count = all_count</span><br><span class="line">        self.per_page = per_page</span><br><span class="line"></span><br><span class="line">        a,b = divmod(all_count,per_page)</span><br><span class="line">        if b:</span><br><span class="line">            a = a + 1</span><br><span class="line">        self.all_pager = a</span><br><span class="line">        self.show_page = show_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def start(self):</span><br><span class="line">        return (self.current_Page - 1) * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def end(self):</span><br><span class="line">        return self.current_Page * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def pager(self):</span><br><span class="line">        page_list = []</span><br><span class="line">        half = int((self.show_page-1)/2)</span><br><span class="line">        if self.all_pager &lt; self.show_page:</span><br><span class="line">            begin = 1</span><br><span class="line">            stop = self.all_pager</span><br><span class="line">        else:</span><br><span class="line">            if self.current_Page &lt;= half:</span><br><span class="line">                begin = 1</span><br><span class="line">                stop = self.show_page</span><br><span class="line">            else:</span><br><span class="line">                begin = self.current_Page - half</span><br><span class="line">                stop = self.current_Page + half</span><br><span class="line">        for i in range(begin,stop+1):</span><br><span class="line">            if i == self.current_Page:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;color:red&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            else:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;display: inline;margin: 5px;padding: 5px&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            page_list.append(temp)</span><br><span class="line">        return &apos;&apos;.join(page_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def custom(request):</span><br><span class="line">    all_count = models.UserInfo.objects.all().count()</span><br><span class="line">    page_info =PageInfo(request.GET.get(&apos;page&apos;),all_count,10)</span><br><span class="line">    user_list = models.UserInfo.objects.all()[page_info.start:page_info.end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list,&apos;page_info&apos;:page_info&#125;)</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class PageInfo(object):</span><br><span class="line">    def __init__(self,current_Pag,all_count,per_page,show_page=11):</span><br><span class="line">        try:</span><br><span class="line">            self.current_Page = int(current_Pag)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            self.current_Page = 1</span><br><span class="line">        self.all_count = all_count</span><br><span class="line">        self.per_page = per_page</span><br><span class="line"></span><br><span class="line">        a,b = divmod(all_count,per_page)</span><br><span class="line">        if b:</span><br><span class="line">            a = a + 1</span><br><span class="line">        self.all_pager = a</span><br><span class="line">        self.show_page = show_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def start(self):</span><br><span class="line">        return (self.current_Page - 1) * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def end(self):</span><br><span class="line">        return self.current_Page * self.per_page</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def pager(self):</span><br><span class="line">        page_list = []</span><br><span class="line">        half = int((self.show_page-1)/2)</span><br><span class="line">        if self.all_pager &lt; self.show_page:</span><br><span class="line">            begin = 1</span><br><span class="line">            stop = self.all_pager</span><br><span class="line">        else:</span><br><span class="line">            if self.current_Page &lt;= half:</span><br><span class="line">                begin = 1</span><br><span class="line">                stop = self.show_page</span><br><span class="line">            else:</span><br><span class="line">                if self.current_Page + half &gt; self.all_pager:</span><br><span class="line">                    begin = self.all_pager - self.show_page + 1</span><br><span class="line">                    stop = self.all_pager</span><br><span class="line">                else:</span><br><span class="line">                    begin = self.current_Page - half</span><br><span class="line">                    stop = self.current_Page + half</span><br><span class="line">        for i in range(begin,stop+1):</span><br><span class="line">            if i == self.current_Page:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;color:red&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            else:</span><br><span class="line">                temp = &quot;&lt;a style=&apos;display: inline;margin: 5px;padding: 5px&apos; href=&apos;/custom.html?page=%s&apos;&gt;%s&lt;/a&gt;&quot;%(i,i,)</span><br><span class="line">            page_list.append(temp)</span><br><span class="line">        return &apos;&apos;.join(page_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def custom(request):</span><br><span class="line">    all_count = models.UserInfo.objects.all().count()</span><br><span class="line">    page_info =PageInfo(request.GET.get(&apos;page&apos;),all_count,10)</span><br><span class="line">    user_list = models.UserInfo.objects.all()[page_info.start:page_info.end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return render(request,&apos;custom.html&apos;,&#123;&apos;user_list&apos;:user_list,&apos;page_info&apos;:page_info&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def custom(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    current_Page = request.GET.get(&amp;apos;page&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    current_Page = int(current_Page)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    per_page = 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = (current_Page - 1) * per_page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end = current_Page * per_page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user_list = models.UserInfo.objects.all()[start:end]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request,&amp;apos;custom.html&amp;apos;,&amp;#123;&amp;apos;user_list&amp;apos;:user_list&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-ORM多对多查询 (自定义第三张表&amp;ManyToManyField)</title>
    <link href="http://midsummer.com/2016/11/09/Django-ORM%E5%A4%9A%E5%AF%B9%E5%A4%9A%E6%9F%A5%E8%AF%A2/"/>
    <id>http://midsummer.com/2016/11/09/Django-ORM多对多查询/</id>
    <published>2016-11-09T01:31:27.000Z</published>
    <updated>2017-11-15T02:45:16.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>对于多对多表</li><li>1.自定义第三张表，更加灵活</li><li>2.ManyToManyField 自动生成第3张表 只能 有3列数据 不能自己添加。</li></ul><a id="more"></a><ul><li>对于多对多表</li><li>1.自定义第三张表，更加灵活</li><li>2.ManyToManyField 自动生成第3张表 只能 有3列数据 不能自己添加。</li></ul><hr><h3 id="自定义第三张表"><a href="#自定义第三张表" class="headerlink" title="自定义第三张表"></a>自定义第三张表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># models.py</span><br><span class="line"></span><br><span class="line">class Boy(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line"></span><br><span class="line">class Girl(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Love(models.Model):</span><br><span class="line">    b = models.ForeignKey(&apos;Boy&apos;)</span><br><span class="line">    g = models.ForeignKey(&apos;Girl&apos;)</span><br><span class="line"></span><br><span class="line">    # 创建联合唯一索引</span><br><span class="line">    # class Meta:</span><br><span class="line">    #     unique_together = [</span><br><span class="line">    #         (&apos;b&apos;,&apos;g&apos;)，</span><br><span class="line">    #     ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line">    # objs = [</span><br><span class="line">    #     models.Boy(name=&apos;summer&apos;),</span><br><span class="line">    #     models.Boy(name=&apos;spring&apos;),</span><br><span class="line">    #     models.Boy(name=&apos;autumn&apos;),</span><br><span class="line">    # ]</span><br><span class="line">    # models.Boy.objects.bulk_create(objs,5)</span><br><span class="line"></span><br><span class="line">    # objs = [</span><br><span class="line">    #     models.Girl(name=&apos;小于&apos;),</span><br><span class="line">    #     models.Girl(name=&apos;小秋&apos;),</span><br><span class="line">    #     models.Girl(name=&apos;小夏&apos;),</span><br><span class="line">    # ]</span><br><span class="line">    # models.Girl.objects.bulk_create(objs,5)</span><br><span class="line"></span><br><span class="line"># 查询和girl小于有关系的boy</span><br><span class="line"></span><br><span class="line"># 1 通过girl表进行反向查找</span><br><span class="line">    obj = models.Girl.objects.filter(name=&apos;小于&apos;).first().love_set.all()</span><br><span class="line">    # obj = models.Girl.objects.filter(name=&apos;小于&apos;).first().love_set.select_related(&apos;b&apos;).all()</span><br><span class="line">    for i in obj:</span><br><span class="line">        print(i.b.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&apos; &apos;.center(60,&apos;=&apos;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 2 通过Love表进行查找</span><br><span class="line"></span><br><span class="line">    obj = models.Love.objects.filter(g__name=&apos;小于&apos;).all()</span><br><span class="line">    for i in obj:</span><br><span class="line">        print(i.b.name)</span><br><span class="line"></span><br><span class="line">    # 这样进行查询性能不好，需要重新发sql请求在进行查询另外一张表中的数据</span><br><span class="line"></span><br><span class="line">    boy_list = models.Love.objects.filter(g__name=&apos;小于&apos;).values(&apos;b__name&apos;)</span><br><span class="line">    for i in boy_list:</span><br><span class="line">        print(i[&apos;b__name&apos;])</span><br><span class="line"></span><br><span class="line">    # 这样 进行了 优化 不会重复发送sql请求，查询到的结果内是字典</span><br><span class="line"></span><br><span class="line">    boy_obj = models.Love.objects.filter(g__name=&apos;小于&apos;).select_related(&apos;b&apos;).all()</span><br><span class="line">    for i in boy_obj:</span><br><span class="line">        print(i.b.name)</span><br><span class="line">    # select_related(&apos;ut&apos;) 相当 于 inner join 先连成一张表再进行查询</span><br><span class="line"></span><br><span class="line">    return HttpResponse(&apos;insert ok ....&apos;)</span><br></pre></td></tr></table></figure><h3 id="ManyToManyField"><a href="#ManyToManyField" class="headerlink" title="ManyToManyField"></a>ManyToManyField</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># models.py</span><br><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line">class Boy(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line">    # m = models.ManyToManyField(&apos;Girl&apos;)</span><br><span class="line"></span><br><span class="line">class Girl(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line">    m = models.ManyToManyField(&apos;Boy&apos;)</span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line">    # objs = [</span><br><span class="line">    #     models.Boy(name=&apos;summer&apos;),</span><br><span class="line">    #     models.Boy(name=&apos;spring&apos;),</span><br><span class="line">    #     models.Boy(name=&apos;autumn&apos;),</span><br><span class="line">    # ]</span><br><span class="line">    # models.Boy.objects.bulk_create(objs,5)</span><br><span class="line"></span><br><span class="line">    # objs = [</span><br><span class="line">    #     models.Girl(name=&apos;小于&apos;),</span><br><span class="line">    #     models.Girl(name=&apos;小秋&apos;),</span><br><span class="line">    #     models.Girl(name=&apos;小夏&apos;),</span><br><span class="line">    # ]</span><br><span class="line">    # models.Girl.objects.bulk_create(objs,5)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # ManyToManyField</span><br><span class="line"></span><br><span class="line">    obj = models.Girl.objects.filter(name=&apos;小秋&apos;).first()</span><br><span class="line"></span><br><span class="line">    # 增</span><br><span class="line">    # obj.m.add(3)</span><br><span class="line">    # obj.m.add(3,4)</span><br><span class="line">    # obj.m.add(*[1,2])</span><br><span class="line"></span><br><span class="line">    # 删</span><br><span class="line">    # obj.m.remove(3)</span><br><span class="line">    # obj.m.remove(3,4)</span><br><span class="line">    # obj.m.remove(*[1,2])</span><br><span class="line"></span><br><span class="line">    # 改</span><br><span class="line">    # obj.m.set([1,2,])</span><br><span class="line"></span><br><span class="line">    # boy_obj = obj.m.all()</span><br><span class="line">    # for row in boy_obj:</span><br><span class="line">    #     print(row.id,row.name)</span><br><span class="line">    # 清除</span><br><span class="line">    # obj.m.clear()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 反向查 在没有 ManyToManyField 字段的表中查</span><br><span class="line">    obj = models.Boy.objects.filter(name=&apos;summer&apos;).first()</span><br><span class="line">    girl_obj = obj.girl_set.all()</span><br><span class="line"># 增删改查</span><br><span class="line">    obj.girl_set.set([1,2,3])</span><br><span class="line"></span><br><span class="line">    for row in girl_list:</span><br><span class="line">        print(row.id,row.name)</span><br><span class="line"></span><br><span class="line">    return HttpResponse(&apos;ok&apos;)</span><br></pre></td></tr></table></figure><hr><h3 id="杂交"><a href="#杂交" class="headerlink" title="杂交"></a>杂交</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># modles.py</span><br><span class="line">class Boy(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line"></span><br><span class="line">class Girl(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line">    m = models.ManyToManyField(&apos;Boy&apos;,through=&apos;Love&apos;,through_fields=(&apos;b&apos;,&apos;g&apos;)) # 只让其生成3张表，如果不加后面产生生成4张表</span><br><span class="line"></span><br><span class="line">class Love(models.Model):</span><br><span class="line">    b = models.ForeignKey(&apos;Boy&apos;)</span><br><span class="line">    g = models.ForeignKey(&apos;Girl&apos;)</span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line">def test(request):</span><br><span class="line">obj = models.Girl.objects.filter(name=&apos;小于&apos;).first()</span><br><span class="line">    # obj.m.add(1) # 不行</span><br><span class="line">    # obj.m.remove(1) # 不行</span><br><span class="line">    # obj.m.set([1,2]) # 不行</span><br><span class="line">    # obj.m.clear() # 可以</span><br><span class="line">    # obj.m.all() # 可以</span><br><span class="line"></span><br><span class="line">    # 杂交的方法对获取查询方便点，还添加了清空功能</span><br><span class="line"></span><br><span class="line">    boy_obj = obj.m.all()</span><br><span class="line"></span><br><span class="line">    for i in boy_obj:</span><br><span class="line">        print(i.name)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;对于多对多表&lt;/li&gt;
&lt;li&gt;1.自定义第三张表，更加灵活&lt;/li&gt;
&lt;li&gt;2.ManyToManyField 自动生成第3张表 只能 有3列数据 不能自己添加。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>线程池、进程池</title>
    <link href="http://midsummer.com/2016/11/09/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E3%80%81%E8%BF%9B%E7%A8%8B%E6%B1%A0/"/>
    <id>http://midsummer.com/2016/11/09/线程池、进程池/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def task(i):</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = ThreadPoolExecutor(10)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="线程池-1"><a href="#线程池-1" class="headerlink" title="线程池"></a>线程池</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def task(i):</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = ThreadPoolExecutor(10)</span><br><span class="line"></span><br><span class="line">for row in range(100):</span><br><span class="line">    p.submit(task,row)</span><br></pre></td></tr></table></figure><h3 id="进程池"><a href="#进程池" class="headerlink" title="进程池"></a>进程池</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor,ProcessPoolExecutor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def task(i):</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    print(i)</span><br><span class="line">p = ProcessPoolExecutor(10)</span><br><span class="line"></span><br><span class="line">for row in range(100):</span><br><span class="line">    p.submit(task,row)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;线程池&quot;&gt;&lt;a href=&quot;#线程池&quot; class=&quot;headerlink&quot; title=&quot;线程池&quot;&gt;&lt;/a&gt;线程池&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from concurrent.futures import ThreadPoolExecutor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def task(i):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = ThreadPoolExecutor(10)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django-中间件01</title>
    <link href="http://midsummer.com/2016/11/09/Django-%E4%B8%AD%E9%97%B4%E4%BB%B601/"/>
    <id>http://midsummer.com/2016/11/09/Django-中间件01/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>django 中的中间件（middleware），在django中，中间件其实就是一个类，在请求到来和结束后，django会根据自己的规则在合适的时机执行中间件中相应的方法。请求过来，先经过所有的process_request(),到视图函数后，经过所有的process_response返回。</li><li>但是如果中某一个process_request()有了返回值，找到它自己所对应的process_respons()直接返回。</li><li>1.10版本之后都是这样的流程，之前的版本，如果process_request()有了返回值，会到最后一个process_respons()，然后返回 。<br>###5个方法</li></ul><a id="more"></a><ul><li>django 中的中间件（middleware），在django中，中间件其实就是一个类，在请求到来和结束后，django会根据自己的规则在合适的时机执行中间件中相应的方法。请求过来，先经过所有的process_request(),到视图函数后，经过所有的process_response返回。</li><li>但是如果中某一个process_request()有了返回值，找到它自己所对应的process_respons()直接返回。</li><li>1.10版本之后都是这样的流程，之前的版本，如果process_request()有了返回值，会到最后一个process_respons()，然后返回 。<br>###5个方法</li></ul><hr><h3 id="process-request-、process-response"><a href="#process-request-、process-response" class="headerlink" title="process_request()、process_response()"></a>process_request()、process_response()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># md.py</span><br><span class="line"></span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line"># setting.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    &apos;django.middleware.security.SecurityMiddleware&apos;,</span><br><span class="line">..........</span><br><span class="line">    &apos;md.M1&apos;,</span><br><span class="line">    &apos;md.M2&apos;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line">    print(&apos;ok&apos;)</span><br><span class="line">    return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 输出结果</span><br><span class="line"></span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">ok</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure><hr><h3 id="process-view"><a href="#process-view" class="headerlink" title="process_view(),"></a>process_view(),</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># md.py</span><br><span class="line"></span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line"></span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line"># 输出结果</span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">ok</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># md.py</span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line"></span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m2.process_view&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"># 输出结果</span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">m2.process_view</span><br><span class="line">ok</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># md.py</span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line"></span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">        response = callback(request,*callback_args, **callback_kwargs)</span><br><span class="line">        return response</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m2.process_view&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line"># 输出结果</span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">ok</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure><h3 id="process-exception"><a href="#process-exception" class="headerlink" title="process_exception()"></a>process_exception()</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># views.py 在视图函数中添加错误进行测试</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line"></span><br><span class="line">    print(&apos;ok&apos;)</span><br><span class="line">    int(&apos;test&apos;)</span><br><span class="line">    return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"># md.py</span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line"></span><br><span class="line">class M1(MiddlewareMixin):</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        print(&apos;m1.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m1.process_view&apos;)</span><br><span class="line">        # response = callback(request,*callback_args, **callback_kwargs)</span><br><span class="line">        # return response</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        print(&apos;m1.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m1.process_exception&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class M2(MiddlewareMixin):</span><br><span class="line">    def process_request(self, request):</span><br><span class="line">        print(&apos;m2.process_request&apos;)</span><br><span class="line">    def process_view(self, request, callback, callback_args, callback_kwargs):</span><br><span class="line">        print(&apos;m2.process_view&apos;)</span><br><span class="line">    def process_response(self, request, response):</span><br><span class="line">        print(&apos;m2.process_response&apos;)</span><br><span class="line">        return response</span><br><span class="line">    def process_exception(self, request, exception):</span><br><span class="line">        print(&apos;m2.process_exception&apos;)</span><br><span class="line"># 输出结果</span><br><span class="line">m1.process_request</span><br><span class="line">m2.process_request</span><br><span class="line">m1.process_view</span><br><span class="line">m2.process_view</span><br><span class="line">ok</span><br><span class="line">m2.process_exception</span><br><span class="line">m1.process_exception</span><br><span class="line">m2.process_response</span><br><span class="line">m1.process_response</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;django 中的中间件（middleware），在django中，中间件其实就是一个类，在请求到来和结束后，django会根据自己的规则在合适的时机执行中间件中相应的方法。请求过来，先经过所有的process_request(),到视图函数后，经过所有的process_response返回。&lt;/li&gt;
&lt;li&gt;但是如果中某一个process_request()有了返回值，找到它自己所对应的process_respons()直接返回。&lt;/li&gt;
&lt;li&gt;1.10版本之后都是这样的流程，之前的版本，如果process_request()有了返回值，会到最后一个process_respons()，然后返回 。&lt;br&gt;###5个方法&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-CBV，FBV</title>
    <link href="http://midsummer.com/2016/11/09/CBV%7CFBV/"/>
    <id>http://midsummer.com/2016/11/09/CBV|FBV/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T02:45:16.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line">from django.views import View</span><br><span class="line"></span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">    def dispatch(self, request, *args, **kwargs):</span><br><span class="line">        print(&apos;before&apos;)</span><br><span class="line">        obj = super(Login,self).dispatch(request, *args, **kwargs)</span><br><span class="line">        print(&apos;after&apos;)</span><br><span class="line">        return obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h1><p>from django.conf.urls import url<br>from django.contrib import admin<br>from cbv import views<br>urlpatterns = [<br>    url(r’^admin/‘, admin.site.urls),<br>    url(r’^Login.html$’, views.Login.as_view()),<br>]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"># views.py</span><br><span class="line">from django.views import View</span><br><span class="line"></span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;</span><br><span class="line">get 查</span><br><span class="line">post 提交 创建</span><br><span class="line">put 更新</span><br><span class="line">delete 删除</span><br><span class="line">&quot;&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure></p><hr><h3 id="dispatch-类似于装饰器的效果"><a href="#dispatch-类似于装饰器的效果" class="headerlink" title="dispatch 类似于装饰器的效果"></a>dispatch 类似于装饰器的效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line">from django.views import View</span><br><span class="line"></span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">    def dispatch(self, request, *args, **kwargs):</span><br><span class="line">        print(&apos;before&apos;)</span><br><span class="line">        obj = super(Login,self).dispatch(request, *args, **kwargs)</span><br><span class="line">        print(&apos;after&apos;)</span><br><span class="line">        return obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure><hr><h3 id="给CBV加装饰器"><a href="#给CBV加装饰器" class="headerlink" title="给CBV加装饰器"></a>给CBV加装饰器</h3><h3 id="在指定方法上装"><a href="#在指定方法上装" class="headerlink" title="在指定方法上装"></a>在指定方法上装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line">from django.views import View</span><br><span class="line">from django.utils.decorators import method_decorator</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def auth(func):</span><br><span class="line">    def wrapper(*args,**kwargs):</span><br><span class="line">        print(time.time())</span><br><span class="line">        return func(*args,**kwargs)</span><br><span class="line">    return wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">    def dispatch(self, request, *args, **kwargs):</span><br><span class="line">        print(&apos;before&apos;)</span><br><span class="line">        obj = super(Login,self).dispatch(request, *args, **kwargs)</span><br><span class="line">        print(&apos;after&apos;)</span><br><span class="line">        return obj</span><br><span class="line"></span><br><span class="line">    @method_decorator(auth)</span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line">    @method_decorator(auth)</span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure><h4 id="在类上加"><a href="#在类上加" class="headerlink" title="在类上加"></a>在类上加</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line">from django.views import View</span><br><span class="line">from django.utils.decorators import method_decorator</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def auth(func):</span><br><span class="line">    def wrapper(*args,**kwargs):</span><br><span class="line">        print(time.time())</span><br><span class="line">        return func(*args,**kwargs)</span><br><span class="line">    return wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># @method_decorator(auth,name=&apos;get&apos;)</span><br><span class="line">@method_decorator(auth,name=&apos;dispatch&apos;)</span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">    def dispatch(self, request, *args, **kwargs):</span><br><span class="line">        print(&apos;before&apos;)</span><br><span class="line">        obj = super(Login,self).dispatch(request, *args, **kwargs)</span><br><span class="line">        print(&apos;after&apos;)</span><br><span class="line">        return obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure><hr><p>*Django 中 的一个bug，csrf_protect装饰器只能在类上添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line">from django.views import View</span><br><span class="line">from django.utils.decorators import method_decorator</span><br><span class="line">from django.views.decorators.csrf import csrf_exempt,csrf_protect</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def auth(func):</span><br><span class="line">    def wrapper(*args,**kwargs):</span><br><span class="line">        print(time.time())</span><br><span class="line">        return func(*args,**kwargs)</span><br><span class="line">    return wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@method_decorator(csrf_protect,name=&apos;get&apos;)</span><br><span class="line">class Login(View):</span><br><span class="line"></span><br><span class="line">    def dispatch(self, request, *args, **kwargs):</span><br><span class="line">        print(&apos;before&apos;)</span><br><span class="line">        obj = super(Login,self).dispatch(request, *args, **kwargs)</span><br><span class="line">        print(&apos;after&apos;)</span><br><span class="line">        return obj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get(self,request):</span><br><span class="line">        return HttpResponse(&apos;Login...get&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def post(self,request):</span><br><span class="line">        user = request.POST.get(&apos;user&apos;)</span><br><span class="line">        print(user)</span><br><span class="line">        return HttpResponse(&apos;Login...post&apos;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# views.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.shortcuts import render,redirect,HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Create your views here.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.views import View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Login(View):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def dispatch(self, request, *args, **kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;apos;before&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj = super(Login,self).dispatch(request, *args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;apos;after&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get(self,request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return HttpResponse(&amp;apos;Login...get&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def post(self,request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        user = request.POST.get(&amp;apos;user&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(user)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return HttpResponse(&amp;apos;Login...post&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Ajax02 上传文件</title>
    <link href="http://midsummer.com/2016/11/09/Ajax02/"/>
    <id>http://midsummer.com/2016/11/09/Ajax02/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T02:45:16.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Ajax 上传文件</p><ul><li>原生Ajax</li><li>JQuery Ajax</li></ul></li><li><p>伪造Ajax上传</p></li></ul><a id="more"></a><ul><li><p>Ajax 上传文件</p><ul><li>原生Ajax</li><li>JQuery Ajax</li></ul></li><li><p>伪造Ajax上传</p></li></ul><hr><h3 id="原生Ajax"><a href="#原生Ajax" class="headerlink" title="原生Ajax"></a>原生Ajax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def upload(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;upload.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(request.POST,request.FILES)</span><br><span class="line">        file_obj = request.FILES.get(&apos;fafafa&apos;)</span><br><span class="line">        import os</span><br><span class="line">        file_path = os.path.join(&apos;static&apos;,file_obj.name)</span><br><span class="line">        with open(file_path,&apos;wb&apos;) as f:</span><br><span class="line">            for chunk in file_obj.chunks():</span><br><span class="line">                f.write(chunk)</span><br><span class="line">        return HttpResponse(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># upload.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;原生Ajax上传文件&lt;/h3&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; id=&quot;il1&quot;&gt;</span><br><span class="line">    &lt;a onclick=&quot;upload1();&quot;&gt;上传&lt;/a&gt;</span><br><span class="line">    &lt;div id=&quot;content&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function upload1() &#123;</span><br><span class="line">            var formData = new FormData();</span><br><span class="line">            formData.append(&apos;k1&apos;,&apos;v1&apos;);</span><br><span class="line">            formData.append(&apos;fafafa&apos;,document.getElementById(&apos;il1&apos;).files[0]);</span><br><span class="line">            var xhr = new XMLHttpRequest();</span><br><span class="line">            xhr.onreadystatechange = function () &#123;</span><br><span class="line">                if(xhr.readyState == 4)&#123;</span><br><span class="line">                    var file_path = xhr.responseText;</span><br><span class="line">                    alert(file_path)</span><br><span class="line">                    var tag = document.createElement(&apos;img&apos;);</span><br><span class="line">                    tag.src = &apos;/&apos; + file_path;</span><br><span class="line">                    document.getElementById(&apos;content&apos;).appendChild(tag)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            xhr.open(&apos;POST&apos;,&apos;/upload/&apos;);</span><br><span class="line">&#123;#          xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos;);#&#125; // 如果send的是传formData对象就不用加这条，后台会对数据进行处理</span><br><span class="line">            xhr.send(formData);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="JQuery-Ajax"><a href="#JQuery-Ajax" class="headerlink" title="JQuery Ajax"></a>JQuery Ajax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def upload(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;upload.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(request.POST,request.FILES)</span><br><span class="line">        file_obj = request.FILES.get(&apos;fafafa&apos;)</span><br><span class="line">        import os</span><br><span class="line">        file_path = os.path.join(&apos;static&apos;,file_obj.name)</span><br><span class="line">        with open(file_path,&apos;wb&apos;) as f:</span><br><span class="line">            for chunk in file_obj.chunks():</span><br><span class="line">                f.write(chunk)</span><br><span class="line">        return HttpResponse(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># upload.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;jQuery Ajax上传文件&lt;/h3&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; id=&quot;il2&quot;&gt;</span><br><span class="line">    &lt;a onclick=&quot;upload2();&quot;&gt;上传&lt;/a&gt;</span><br><span class="line">    &lt;div id=&quot;content2&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        function upload2() &#123;</span><br><span class="line">            var formData = new FormData();</span><br><span class="line">            formData.append(&apos;k1&apos;,&apos;v1&apos;);</span><br><span class="line">            formData.append(&apos;fafafa&apos;,$(&apos;#il2&apos;)[0].files[0]);</span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: &apos;/upload/&apos;,</span><br><span class="line">                type: &apos;POST&apos;,</span><br><span class="line">                data: formData,</span><br><span class="line">                contentType: false,</span><br><span class="line">                processData: false, // 告知jQuery不要加那些请求头对数据进行处理，把原生的formData传过去</span><br><span class="line">                success:function (arg) &#123;</span><br><span class="line">                    alert(arg);</span><br><span class="line">                    var tag = document.createElement(&apos;img&apos;);</span><br><span class="line">                    tag.src = &apos;/&apos; + arg;</span><br><span class="line">                    document.getElementById(&apos;content&apos;).appendChild(tag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="伪造Ajax上传"><a href="#伪造Ajax上传" class="headerlink" title="伪造Ajax上传"></a>伪造Ajax上传</h3><pre><code>- 之前两种 都要依赖FormData对象进行操作，虽然好用，但兼容性稍微差点，在html5之后提出的对象，现在主流的浏览器都支持，ie10以上才能用，其他更老的浏览器就不支持FormData对象，这时候就要用伪造Ajax上传，兼容性好。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def upload(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;upload.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(request.POST,request.FILES)</span><br><span class="line">        file_obj = request.FILES.get(&apos;fafafa&apos;)</span><br><span class="line">        import os</span><br><span class="line">        file_path = os.path.join(&apos;static&apos;,file_obj.name)</span><br><span class="line">        with open(file_path,&apos;wb&apos;) as f:</span><br><span class="line">            for chunk in file_obj.chunks():</span><br><span class="line">                f.write(chunk)</span><br><span class="line">        return HttpResponse(file_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># upload.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;伪 Ajax上传文件&lt;/h3&gt;</span><br><span class="line">        &lt;form id=&quot;f1&quot; action=&quot;/upload/&quot; target=&quot;ifr&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">        &lt;input type=&quot;file&quot; name=&quot;fafafa&quot; /&gt;</span><br><span class="line">        &lt;a onclick=&quot;upload3();&quot;&gt;提交&lt;/a&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;div id=&quot;content3&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">function upload3() &#123;</span><br><span class="line">        document.getElementById(&apos;ifr&apos;).onload = loadIframe;</span><br><span class="line">        document.getElementById(&apos;f1&apos;).submit();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">        function loadIframe() &#123;</span><br><span class="line">        var content =  document.getElementById(&apos;ifr&apos;).contentWindow.document.body.innerText;</span><br><span class="line">        alert(content);</span><br><span class="line">        var tag = document.createElement(&apos;img&apos;);</span><br><span class="line">        tag.src = &apos;/&apos; + content;</span><br><span class="line">        document.getElementById(&apos;content&apos;).appendChild(tag)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ajax 上传文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原生Ajax&lt;/li&gt;
&lt;li&gt;JQuery Ajax&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;伪造Ajax上传&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://midsummer.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Ajax" scheme="http://midsummer.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>JSONP详解</title>
    <link href="http://midsummer.com/2016/11/09/JSONP%E8%AF%A6%E8%A7%A3/"/>
    <id>http://midsummer.com/2016/11/09/JSONP详解/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>同源策略</p><ul><li>限制：Ajax<ul><li>向别的网站发Ajax请求，在拿回数据的时候，已经在拿回来的时候，发送给浏览器，浏览器阻止了，请求已经发送给服务器并执行了</li></ul></li><li>不限制：有src属性的，如script 标签</li></ul></li><li><p>但是在开发过程中有这样的需求：向其他网站发送Http请求。</p><ul><li>浏览器直接发送请求【考虑同源】</li><li>浏览器-&gt; 服务端 -&gt; 发送请求</li></ul></li></ul><ul><li>浏览器直接发送请求【考虑同源】</li></ul><a id="more"></a><h3 id="JSONP详解"><a href="#JSONP详解" class="headerlink" title="JSONP详解"></a>JSONP详解</h3><ul><li><p>同源策略</p><ul><li>限制：Ajax<ul><li>向别的网站发Ajax请求，在拿回数据的时候，已经在拿回来的时候，发送给浏览器，浏览器阻止了，请求已经发送给服务器并执行了</li></ul></li><li>不限制：有src属性的，如script 标签</li></ul></li><li><p>但是在开发过程中有这样的需求：向其他网站发送Http请求。</p><ul><li>浏览器直接发送请求【考虑同源】</li><li>浏览器-&gt; 服务端 -&gt; 发送请求</li></ul></li></ul><ul><li>浏览器直接发送请求【考虑同源】</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># jsonp.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;获取用户列表&quot; onclick=&quot;getUsers();&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;user_lsit&quot;&gt;&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// Ajax 请求有限制，同源策略</span><br><span class="line">    /*</span><br><span class="line">    function getUsers() &#123;</span><br><span class="line">        var xhr = new XMLHttpRequest();</span><br><span class="line">        xhr.onreadystatechange = function () &#123;</span><br><span class="line">            if(xhr.readyState == 4)&#123;</span><br><span class="line">                var content = xhr.responseText;</span><br><span class="line">                console.log(content)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.open(&apos;GET&apos;,&apos;http://www.s4.com:8001/users/?callback=bbb&apos;);</span><br><span class="line">        xhr.send();</span><br><span class="line">    &#125;</span><br><span class="line">    function bbb(arg) &#123;</span><br><span class="line">        console.log(arg)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// jsonp</span><br><span class="line">    function getUsers() &#123;</span><br><span class="line">        var tag = document.createElement(&apos;script&apos;);</span><br><span class="line">        tag.src = &apos;http://www.s4.com:8001/users/?callback=bbb&apos;;</span><br><span class="line">        document.head.appendChild(tag);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function bbb(arg) &#123;</span><br><span class="line">        console.log(arg)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 请求目标网站</span><br><span class="line"># veiws.py</span><br><span class="line"></span><br><span class="line">def users(request):</span><br><span class="line">    funcname = request.GET.get(&apos;callback&apos;)</span><br><span class="line">    print(&apos;请求来了&apos;)</span><br><span class="line">    user_list = [</span><br><span class="line">        &apos;summer&apos;,&apos;spring&apos;,&apos;autumn&apos;</span><br><span class="line">    ]</span><br><span class="line">    user_list_str = json.dumps(user_list)</span><br><span class="line">    temp = &apos;%s(%s)&apos; % (funcname,user_list_str)</span><br><span class="line"></span><br><span class="line">    print(temp)</span><br><span class="line">    return HttpResponse(temp)</span><br></pre></td></tr></table></figure><hr><ul><li>jsonp要求：<ul><li>1.客户端<ul><li>tag.src = ‘<a href="http://www.s4.com:8001/users/?callback=bbb" target="_blank" rel="external">http://www.s4.com:8001/users/?callback=bbb</a>‘;</li><li>function bbb(arg) { console.log(arg) }</li></ul></li><li>2.服务端<ul><li>获取 funcname = request.GET.get(‘callback’)</li><li>返回 funcname(数据)</li></ul></li></ul></li></ul><hr><ul><li>用jQuery Ajax 来发送请求<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;获取用户列表&quot; onclick=&quot;getUsers();&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;user_lsit&quot;&gt;&lt;/ul&gt;</span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function getUsers() &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: &apos;http://www.s4.com:8001/users/&apos;,</span><br><span class="line">            type: &apos;GET&apos;,</span><br><span class="line">            // 改用jsonp去发，改下面几个参数，原用XMLHttpRequest。</span><br><span class="line">            dataType: &apos;JSONP&apos;,</span><br><span class="line">            jsonp: &apos;callback&apos;,</span><br><span class="line">            jsonpCallback: &apos;bbb&apos;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function bbb(arg) &#123;</span><br><span class="line">        console.log(arg)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>使用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line">1. 自己写动态创建script</span><br><span class="line">function getUsers()&#123;</span><br><span class="line">var tag = document.createElement(&apos;script&apos;);</span><br><span class="line">tag.src = &quot;http://www.s4.com:8001/users/?callback=bbb&quot;;</span><br><span class="line">document.head.appendChild(tag);</span><br><span class="line"> &#125;</span><br><span class="line">2. jQuery</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url: &apos;http://www.s4.com:8001/users/&apos;,</span><br><span class="line">type: &apos;GET&apos;,</span><br><span class="line">dataType: &apos;JSONP&apos;,</span><br><span class="line">jsonp: &apos;funcname&apos;,</span><br><span class="line">jsonpCallback: &apos;bbb&apos;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">其他：</span><br><span class="line">- 只能发GET请求</span><br><span class="line">- 约定，客户端服务端制定好规则</span><br><span class="line"></span><br><span class="line">JSONP是一种技术，一种方式，目的解决跨域问题</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;同源策略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制：Ajax&lt;ul&gt;
&lt;li&gt;向别的网站发Ajax请求，在拿回数据的时候，已经在拿回来的时候，发送给浏览器，浏览器阻止了，请求已经发送给服务器并执行了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不限制：有src属性的，如script 标签&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是在开发过程中有这样的需求：向其他网站发送Http请求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器直接发送请求【考虑同源】&lt;/li&gt;
&lt;li&gt;浏览器-&amp;gt; 服务端 -&amp;gt; 发送请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;浏览器直接发送请求【考虑同源】&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://midsummer.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Ajax01</title>
    <link href="http://midsummer.com/2016/11/09/Ajax01/"/>
    <id>http://midsummer.com/2016/11/09/Ajax01/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T02:42:27.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>1.Ajax</p><ul><li><p>1.原生Ajax,XMLHttpRequest</p><ul><li>2.jQuery Ajax,内部基于’原生Ajax’</li></ul></li></ul></li><li><p>2.伪Ajax，非XMLHttpRequest</p></li><li>3.跨域Ajax，JSONP</li></ul><a id="more"></a><ul><li><p>1.Ajax</p><ul><li><p>1.原生Ajax,XMLHttpRequest</p><ul><li>2.jQuery Ajax,内部基于’原生Ajax’</li></ul></li></ul></li><li><p>2.伪Ajax，非XMLHttpRequest</p></li><li>3.跨域Ajax，JSONP</li></ul><hr><h3 id="1-Ajax"><a href="#1-Ajax" class="headerlink" title="1.Ajax"></a>1.Ajax</h3><h3 id="JQuery-Ajax"><a href="#JQuery-Ajax" class="headerlink" title="JQuery Ajax"></a>JQuery Ajax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def index(request):</span><br><span class="line">    return render(request,&apos;index.html&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def add1(request):</span><br><span class="line">    print(request.POST)</span><br><span class="line">    a1 = int(request.POST.get(&apos;il1&apos;))</span><br><span class="line">    a2 = int(request.POST.get(&apos;il2&apos;))</span><br><span class="line">    return HttpResponse(a1 + a2)</span><br><span class="line"></span><br><span class="line"># index.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; id=&quot;il1&quot; /&gt;</span><br><span class="line">    +</span><br><span class="line">    &lt;input type=&quot;text&quot; id=&quot;il2&quot; /&gt;</span><br><span class="line">    =</span><br><span class="line">    &lt;input type=&quot;text&quot; id=&quot;il3&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;JQuery Ajax&quot; id=&quot;btn1&quot; onclick=&quot;add1()&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;原生 Ajax&quot; id=&quot;btn2&quot; onclick=&quot;add2()&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">    // jQuery Ajax,内部基于&apos;原生Ajax&apos;</span><br><span class="line">    function add1() &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: &apos;/add1/&apos;,</span><br><span class="line">            type: &apos;POST&apos;,</span><br><span class="line">            data:&#123;&apos;il1&apos;:$(&apos;#il1&apos;).val(),&apos;il2&apos;:$(&apos;#il2&apos;).val()&#125;,</span><br><span class="line">            success:function (arg) &#123;</span><br><span class="line">                $(&apos;#il3&apos;).val(arg)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="原生Ajax-XMLHttpRequest"><a href="#原生Ajax-XMLHttpRequest" class="headerlink" title="原生Ajax,XMLHttpRequest"></a>原生Ajax,XMLHttpRequest</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def add2(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        a1 = int(request.GET.get(&apos;il1&apos;))</span><br><span class="line">        a2 = int(request.GET.get(&apos;il2&apos;))</span><br><span class="line">        print(&apos;add2....&apos;)</span><br><span class="line">        return HttpResponse(a1 + a2)</span><br><span class="line">    else:</span><br><span class="line">        a1 = int(request.POST.get(&apos;il1&apos;))</span><br><span class="line">        a2 = int(request.POST.get(&apos;il2&apos;))</span><br><span class="line">        return HttpResponse(a1 + a2)</span><br><span class="line"></span><br><span class="line"># index.html</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"># 原生Ajax,GET请求</span><br><span class="line">    function add2() &#123;</span><br><span class="line">        var xhr = new XMLHttpRequest();</span><br><span class="line">        xhr.onreadystatechange = function () &#123;</span><br><span class="line">            if (xhr.readyState == 4)&#123;</span><br><span class="line">                alert(xhr.responseText)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">            xhr.open(&apos;GET&apos;,&apos;/add2/?il1=12&amp;il2=19&apos;);</span><br><span class="line">            xhr.send();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"># 原生Ajax,POST请求</span><br><span class="line">    function add2() &#123;</span><br><span class="line">        var xhr = new XMLHttpRequest();</span><br><span class="line">        xhr.onreadystatechange = function () &#123;</span><br><span class="line">            if (xhr.readyState == 4)&#123;</span><br><span class="line">                alert(xhr.responseText)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">            xhr.open(&apos;POST&apos;,&apos;/add2/&apos;);</span><br><span class="line">            xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos;);// 加请求头</span><br><span class="line">            xhr.send(&apos;il1=12&amp;il2=19&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="伪Ajax，非XMLHttpRequest，iframe标签"><a href="#伪Ajax，非XMLHttpRequest，iframe标签" class="headerlink" title="伪Ajax，非XMLHttpRequest，iframe标签"></a>伪Ajax，非XMLHttpRequest，iframe标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># iframe标签,不刷新发送Http请求</span><br><span class="line"># view.py</span><br><span class="line">def autohome(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;autohome.html&apos;)</span><br><span class="line"></span><br><span class="line"># autohome.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; id=&quot;text1&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;提交&quot; onclick=&quot;changeSrc()&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;iframe id=&quot;text2&quot; style=&quot;width: 1000px;height: 2000px&quot; src=&quot;http://www.autohome.com.cn&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function changeSrc() &#123;</span><br><span class="line">        /*</span><br><span class="line">        var cont = $(&apos;#text1&apos;).val();</span><br><span class="line">        $(&apos;#text2&apos;).attr(&apos;src&apos;,cont);</span><br><span class="line">        */</span><br><span class="line">        var cont = document.getElementById(&apos;text1&apos;).value;</span><br><span class="line">        document.getElementById(&apos;text2&apos;).src = cont</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># iframe + form 进行伪Ajax</span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line">def fake_ajax(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;fake_ajax.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;post.ok&apos;)</span><br><span class="line">        print(request.POST.get(&apos;user&apos;))</span><br><span class="line">        return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"># fake_ajax.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;text&quot;&gt;</span><br><span class="line">&lt;form id=&quot;f1&quot; action=&quot;/fake_ajax/&quot; target=&quot;ifr&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;user&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 加上伪造的&apos;回调函数&apos;</span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line">def fake_ajax(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;fake_ajax.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;post.ok&apos;)</span><br><span class="line">        content = request.POST.get(&apos;user&apos;)</span><br><span class="line">        return HttpResponse(content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># fake_ajax.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;text&quot;&gt;</span><br><span class="line">&lt;form id=&quot;f1&quot; action=&quot;/fake_ajax/&quot; target=&quot;ifr&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;iframe id=&quot;ifr&quot; name=&quot;ifr&quot; style=&quot;display: none&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;user&quot; /&gt;</span><br><span class="line">    &lt;a onclick=&quot;submitForm()&quot;&gt;提交&lt;/a&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function submitForm() &#123;</span><br><span class="line">        document.getElementById(&apos;ifr&apos;).onload = loadIframe;</span><br><span class="line">        document.getElementById(&apos;f1&apos;).submit();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function loadIframe() &#123;</span><br><span class="line">        var content =  document.getElementById(&apos;ifr&apos;).contentWindow.document.body.innerText;</span><br><span class="line">        alert(content)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.Ajax&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.原生Ajax,XMLHttpRequest&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2.jQuery Ajax,内部基于’原生Ajax’&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.伪Ajax，非XMLHttpRequest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;3.跨域Ajax，JSONP&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://midsummer.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Ajax" scheme="http://midsummer.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>修复Bug，刷新无法动态显示数据库内容</title>
    <link href="http://midsummer.com/2016/11/09/%E4%BF%AE%E5%A4%8DBug%EF%BC%8C%E5%88%B7%E6%96%B0%E6%97%A0%E6%B3%95%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%86%85%E5%AE%B9/"/>
    <id>http://midsummer.com/2016/11/09/修复Bug，刷新无法动态显示数据库内容/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">修复Bug，刷新无法动态显示数据库内容：</span><br><span class="line">方式一：</span><br><span class="line">class TeacherForm(Form):</span><br><span class="line">tname = fields.CharField(min_length=2)</span><br><span class="line"># xx = form_model.ModelMultipleChoiceField(queryset=models.Classes.objects.all())</span><br><span class="line"># xx = form_model.ModelChoiceField(queryset=models.Classes.objects.all())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">class TeacherForm(Form):</span><br><span class="line">tname = fields.CharField(min_length=2)</span><br><span class="line"></span><br><span class="line">xx = fields.MultipleChoiceField(</span><br><span class="line">widget=widgets.SelectMultiple</span><br><span class="line">)</span><br><span class="line">def __init__(self,*args,**kwargs):</span><br><span class="line">super(TeacherForm,self).__init__(*args,**kwargs)</span><br><span class="line">self.fields[&apos;xx&apos;].choices = models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="修复Bug"><a href="#修复Bug" class="headerlink" title="修复Bug"></a>修复Bug</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">修复Bug，刷新无法动态显示数据库内容：</span><br><span class="line">方式一：</span><br><span class="line">class TeacherForm(Form):</span><br><span class="line">tname = fields.CharField(min_length=2)</span><br><span class="line"># xx = form_model.ModelMultipleChoiceField(queryset=models.Classes.objects.all())</span><br><span class="line"># xx = form_model.ModelChoiceField(queryset=models.Classes.objects.all())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">class TeacherForm(Form):</span><br><span class="line">tname = fields.CharField(min_length=2)</span><br><span class="line"></span><br><span class="line">xx = fields.MultipleChoiceField(</span><br><span class="line">widget=widgets.SelectMultiple</span><br><span class="line">)</span><br><span class="line">def __init__(self,*args,**kwargs):</span><br><span class="line">super(TeacherForm,self).__init__(*args,**kwargs)</span><br><span class="line">self.fields[&apos;xx&apos;].choices = models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;修复Bug，刷新无法动态显示数据库内容：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	方式一：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		class TeacherForm(Form):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			tname = fields.CharField(min_length=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			# xx = form_model.ModelMultipleChoiceField(queryset=models.Classes.objects.all())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			# xx = form_model.ModelChoiceField(queryset=models.Classes.objects.all())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	方式二：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		class TeacherForm(Form):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			tname = fields.CharField(min_length=2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			xx = fields.MultipleChoiceField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				widget=widgets.SelectMultiple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			def __init__(self,*args,**kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				super(TeacherForm,self).__init__(*args,**kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				self.fields[&amp;apos;xx&amp;apos;].choices = models.Classes.objects.values_list(&amp;apos;id&amp;apos;,&amp;apos;title&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>xss跨站脚本攻击 ，csrf跨站请求伪造</title>
    <link href="http://midsummer.com/2016/11/09/xss%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%20%EF%BC%8Ccsrf%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"/>
    <id>http://midsummer.com/2016/11/09/xss跨站脚本攻击 ，csrf跨站请求伪造/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">msg = []</span><br><span class="line">def comment(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;comment.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        v = request.POST.get(&apos;content&apos;)</span><br><span class="line">        msg.append(v)</span><br><span class="line">        return render(request, &apos;comment.html&apos;)</span><br><span class="line">def show(request):</span><br><span class="line">    return render(request, &apos;index.html&apos;, &#123;&apos;msg&apos;: msg&#125;)</span><br><span class="line"></span><br><span class="line"># comment.html</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="xss攻击-跨站脚本攻击"><a href="#xss攻击-跨站脚本攻击" class="headerlink" title="xss攻击 跨站脚本攻击"></a>xss攻击 跨站脚本攻击</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">msg = []</span><br><span class="line">def comment(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;comment.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        v = request.POST.get(&apos;content&apos;)</span><br><span class="line">        msg.append(v)</span><br><span class="line">        return render(request, &apos;comment.html&apos;)</span><br><span class="line">def show(request):</span><br><span class="line">    return render(request, &apos;index.html&apos;, &#123;&apos;msg&apos;: msg&#125;)</span><br><span class="line"></span><br><span class="line"># comment.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;评论&lt;/h3&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;content&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># index.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;展示评论&lt;/h3&gt;</span><br><span class="line">&#123;% for item in msg %&#125;</span><br><span class="line">    &lt;div&gt;&#123;&#123; item|safe &#125;&#125;&lt;/div&gt;   # 加|safe</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"># 加|safe 是一种方法</span><br><span class="line"># 还有一种方法，在后台标记成安全的</span><br><span class="line"># from django.utils.safestring import mark_safe</span><br><span class="line"># temp = &apos;&lt;a href=&apos;http://taobao.com&apos;&gt;淘宝&lt;/a&gt;&apos;</span><br><span class="line"># newtemp = mark_safe(temp)</span><br><span class="line"># 然后 render 返回前段渲染 这样 也会被识别成安全的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################ 措施</span><br><span class="line"># views.py</span><br><span class="line"># 对特殊字符进行过滤，对|safe和mark_safe使用要谨慎，如果要使用一定要进行过滤</span><br><span class="line">msg = []</span><br><span class="line">def comment(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;comment.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        v = request.POST.get(&apos;content&apos;)</span><br><span class="line">        if &apos;script&apos; in v:</span><br><span class="line">        return render(request, &apos;comment.html&apos;,&#123;&apos;error&apos;:&apos;还想黑我&apos;&#125;)</span><br><span class="line">    else:</span><br><span class="line">        msg.append(v)</span><br><span class="line">        return render(request, &apos;comment.html&apos;)</span><br><span class="line">def show(request):</span><br><span class="line">    return render(request, &apos;index.html&apos;, &#123;&apos;msg&apos;: msg&#125;)</span><br></pre></td></tr></table></figure><hr><h3 id="csrf-跨站请求伪造"><a href="#csrf-跨站请求伪造" class="headerlink" title="csrf 跨站请求伪造"></a>csrf 跨站请求伪造</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"># csrf 用户访问需要携带随机字符串</span><br><span class="line"># views.py</span><br><span class="line">def index2(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;index.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"># index.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;  # 会自动生成input框冰隐藏，value值为随机字符串</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># &#123;% csrf_token %&#125;</span><br><span class="line"># &lt;input type=&quot;hidden&quot; name=&quot;csrfmiddlewaretoken&quot; value=&quot;voopFnF1UhczvzVdMReXsZuvWiQmfqUhGqZa6yWMVxWNaaXr4hsJsfDic1lQkTLy&quot;&gt;</span><br><span class="line"></span><br><span class="line"># &#123;&#123; csrf_token &#125;&#125;</span><br><span class="line"># 如果写成这样 这是直接生成随机字符串</span><br><span class="line"></span><br><span class="line"># 不仅在 input 框里生成了随机字符串，在本地cookice 中也生成了随机字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 如果需要全站禁用csrf</span><br><span class="line"># setting.py</span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">.......</span><br><span class="line">    # &apos;django.middleware.csrf.CsrfViewMiddleware&apos;,</span><br><span class="line">.......</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"># 局部禁用</span><br><span class="line"></span><br><span class="line"># 单独在某个函数加装饰器</span><br><span class="line">from django.views.decorators.csrf import csrf_exempt</span><br><span class="line">@csrf_exempt</span><br><span class="line">def index2(request):</span><br><span class="line"></span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;index2.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"># 局部使用</span><br><span class="line"></span><br><span class="line">from django.views.decorators.csrf import csrf_exempt,csrf_protect</span><br><span class="line">@csrf_protect</span><br><span class="line">def index2(request):</span><br><span class="line"></span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;index2.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 不用Form表单提交用Ajax提交</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &lt;input id=&quot;user&quot; type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class="line">    &lt;a onclick=&quot;submitForm()&quot;&gt;提交&lt;/a&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function submitForm() &#123;</span><br><span class="line">        var csrf = $(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val();</span><br><span class="line">        var user = $(&apos;#user&apos;).val();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: &apos;/index2.html&apos;,</span><br><span class="line">            type: &apos;POST&apos;,</span><br><span class="line">            data:&#123;&quot;user&quot;:user,&quot;csrfmiddlewaretoken&quot;:csrf&#125;,</span><br><span class="line">            success:function (arg) &#123;</span><br><span class="line">                console.log(arg)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Ajax 请求头里把字符串传过去</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &#123;&#123; csrf_token &#125;&#125;</span><br><span class="line">    &lt;input id=&quot;user&quot; type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class="line">&#123;#    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;#&#125;</span><br><span class="line">    &lt;a onclick=&quot;submitForm()&quot;&gt;提交&lt;/a&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;/static/jquery-3.2.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/static/jquery-cookie.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function submitForm() &#123;</span><br><span class="line">        var token = $.cookie(&apos;csrftoken&apos;);</span><br><span class="line">        var user = $(&apos;#user&apos;).val();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: &apos;/index2.html&apos;,</span><br><span class="line">            type: &apos;POST&apos;,</span><br><span class="line">            headers:&#123;&apos;X-CSRFToken&apos;:token&#125;,</span><br><span class="line">            data:&#123;&quot;user&quot;:user&#125;,</span><br><span class="line">            success:function (arg) &#123;</span><br><span class="line">                console.log(arg)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# views.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def comment(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if request.method == &amp;apos;GET&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return render(request,&amp;apos;comment.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        v = request.POST.get(&amp;apos;content&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.append(v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return render(request, &amp;apos;comment.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def show(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request, &amp;apos;index.html&amp;apos;, &amp;#123;&amp;apos;msg&amp;apos;: msg&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# comment.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Form组件</title>
    <link href="http://midsummer.com/2016/11/09/From%E7%BB%84%E4%BB%B6/"/>
    <id>http://midsummer.com/2016/11/09/From组件/</id>
    <published>2016-11-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Form 验证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># login.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;/login.html&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &lt;p&gt;姓名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&#123;&#123; obj.errors.username.0 &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;密码：&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&#123;&#123; obj.errors.password.0 &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="Django-提供的Form组件"><a href="#Django-提供的Form组件" class="headerlink" title="Django 提供的Form组件"></a>Django 提供的Form组件</h3><ul><li>Form 验证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># login.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;/login.html&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &lt;p&gt;姓名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&#123;&#123; obj.errors.username.0 &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;密码：&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&#123;&#123; obj.errors.password.0 &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">from django.shortcuts import render,redirect,HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from django.forms import Form</span><br><span class="line">from django.forms import fields</span><br><span class="line">class LoginForm(Form):</span><br><span class="line">    username = fields.CharField(</span><br><span class="line">        max_length=32,</span><br><span class="line">        min_length=4,</span><br><span class="line">        required=True,</span><br><span class="line">        error_messages=&#123;</span><br><span class="line">            &apos;max_length&apos;:&apos;最大长度为32&apos;,</span><br><span class="line">            &apos;min_length&apos;:&apos;最小长度为4&apos;,</span><br><span class="line">            &apos;required&apos;:&apos;不能为空&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    password = fields.CharField(</span><br><span class="line">        min_length=6,</span><br><span class="line">        required=True,</span><br><span class="line">        error_messages=&#123;</span><br><span class="line">            &apos;min_length&apos;:&apos;最小长度为6&apos;,</span><br><span class="line">            &apos;required&apos;: &apos;不能为空&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">def login(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;login.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        obj = LoginForm(request.POST)</span><br><span class="line"></span><br><span class="line">        if obj.is_valid():</span><br><span class="line">            print(&apos;正确&apos;)</span><br><span class="line">            print(obj.cleaned_data) # 出来的是字典类型 &#123;&apos;username&apos;: &apos;summer&apos;, &apos;password&apos;: &apos;123456&apos;&#125;</span><br><span class="line">            return HttpResponse(&apos;登陆成功！&apos;)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;错误&apos;)</span><br><span class="line"></span><br><span class="line">            # print(obj.errors[&apos;username&apos;][0])</span><br><span class="line">            # print(obj.errors[&apos;password&apos;][0])</span><br><span class="line">            return render(request, &apos;login.html&apos;,&#123;&apos;obj&apos;:obj&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Form 验证&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# login.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form action=&amp;quot;/login.html&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% csrf_token %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;姓名：&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;username&amp;quot;&amp;gt;&amp;#123;&amp;#123; obj.errors.username.0 &amp;#125;&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;密码：&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;password&amp;quot;&amp;gt;&amp;#123;&amp;#123; obj.errors.password.0 &amp;#125;&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;提交&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-ORM进阶操作02</title>
    <link href="http://midsummer.com/2016/11/09/Django-ORM%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C02/"/>
    <id>http://midsummer.com/2016/11/09/Django-ORM进阶操作02/</id>
    <published>2016-11-08T23:31:27.000Z</published>
    <updated>2017-11-15T02:46:28.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">q = models.UserInfo.objects.all().filter(id__lt=60)</span><br><span class="line"># for row in q:</span><br><span class="line">#     print(row.id,row.name,row.ut.title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 这样进行查询性能不好，需要重新发sql请求在进行查询另外一张表中的数据，如果有10条数据就要进行11次查询</span><br><span class="line"></span><br><span class="line">q = models.UserInfo.objects.all().values(&apos;name&apos;,&apos;id&apos;,&apos;ut__title&apos;).filter(id__lt=60)</span><br><span class="line"># for i in q:</span><br><span class="line">#     print(i[&apos;name&apos;],i[&apos;ut__title&apos;])</span><br><span class="line"># 这样 进行了 优化 不回重复发送sql请求，到的结果内是字典</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">q = models.UserInfo.objects.all().select_related(&apos;ut&apos;).filter(id__lt=60)</span><br><span class="line">print(q.query)</span><br><span class="line"># for row in q:</span><br><span class="line">#     print(row.id,row.name,row.ut.title)</span><br><span class="line"># select_related(&apos;ut&apos;) 相当 于 inner join 先连成一张表再进行查询</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="select-related-查询主动做连表"><a href="#select-related-查询主动做连表" class="headerlink" title="select_related() 查询主动做连表"></a>select_related() 查询主动做连表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">q = models.UserInfo.objects.all().filter(id__lt=60)</span><br><span class="line"># for row in q:</span><br><span class="line">#     print(row.id,row.name,row.ut.title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 这样进行查询性能不好，需要重新发sql请求在进行查询另外一张表中的数据，如果有10条数据就要进行11次查询</span><br><span class="line"></span><br><span class="line">q = models.UserInfo.objects.all().values(&apos;name&apos;,&apos;id&apos;,&apos;ut__title&apos;).filter(id__lt=60)</span><br><span class="line"># for i in q:</span><br><span class="line">#     print(i[&apos;name&apos;],i[&apos;ut__title&apos;])</span><br><span class="line"># 这样 进行了 优化 不回重复发送sql请求，到的结果内是字典</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">q = models.UserInfo.objects.all().select_related(&apos;ut&apos;).filter(id__lt=60)</span><br><span class="line">print(q.query)</span><br><span class="line"># for row in q:</span><br><span class="line">#     print(row.id,row.name,row.ut.title)</span><br><span class="line"># select_related(&apos;ut&apos;) 相当 于 inner join 先连成一张表再进行查询</span><br></pre></td></tr></table></figure><h3 id="prefetch-related-不做连表，做多次查询"><a href="#prefetch-related-不做连表，做多次查询" class="headerlink" title="prefetch_related() 不做连表，做多次查询"></a>prefetch_related() 不做连表，做多次查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    q = models.UserInfo.objects.all().prefetch_related(&apos;ut&apos;).filter(id__lt=60)</span><br><span class="line">    for row in q:</span><br><span class="line">        print(row.id,row.name,row.ut.title)</span><br><span class="line"></span><br><span class="line"># 如果查询的数据比较多，查询的次数比较多就不建议用select_related进行连表查询，毕竟连表查询毕竟有损耗。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"># distinct()</span><br><span class="line">v = models.UserInfo.objects.values(&apos;age&apos;).distinct()</span><br><span class="line">for item in v:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"># 在mysql,sqlite中distinct()括号里是不能传参数，</span><br><span class="line"># select distinct nid from userinfo;</span><br><span class="line"></span><br><span class="line"># 而在 PostgreSQL 中</span><br><span class="line"># models.UserInfo.objects.distinct(&apos;nid&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># reverse()</span><br><span class="line">v = models.UserInfo.objects.all().order_by(&apos;id&apos;).reverse()</span><br><span class="line"># reverse() 必须在order_by()后使用不能单独使用。</span><br><span class="line">for i in v:</span><br><span class="line">    print(i.id)</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.all().order_by(&apos;-id&apos;,&apos;name&apos;).reverse()</span><br><span class="line"># 相当于order_by(&apos;id&apos;,&apos;-name&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># only()</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.all()</span><br><span class="line"># [obj]</span><br><span class="line">v = models.UserInfo.objects.all().only(&apos;id&apos;,&apos;name&apos;)</span><br><span class="line"># [obj]</span><br><span class="line">for obj in v:</span><br><span class="line">    print(obj.name,obj.id,obj.age)</span><br><span class="line">    # 虽然加里only(),但是还能取出其他数据，但是不要这么取，会在再区表中进行查询影响效率,写几个取几个，不要多取</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.values(&apos;id&apos;,&apos;name&apos;).all()</span><br><span class="line"># [&#123;id,name&#125;]</span><br><span class="line">for i in v:</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># defer()</span><br><span class="line"># defer() 和only()相反，取括号内以外的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># using()</span><br><span class="line"># 指定数据库</span><br><span class="line"># models.UserInfo.objects.all().using(&apos;db2&apos;)</span><br><span class="line"></span><br><span class="line"># setting.py</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;,</span><br><span class="line">        &apos;NAME&apos;: os.path.join(BASE_DIR, &apos;db.sqlite3&apos;),</span><br><span class="line">    &#125;,</span><br><span class="line">    &apos;db2&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;db2&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;&apos;,</span><br><span class="line">        &apos;HOST&apos;: &apos;&apos;,</span><br><span class="line">        &apos;PORT&apos;: &apos;&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># dates()</span><br><span class="line"></span><br><span class="line">    # # 根据时间进行某一部分进行去重查找并截取指定内容</span><br><span class="line">    # # kind只能是：&quot;year&quot;（年）, &quot;month&quot;（年-月）, &quot;day&quot;（年-月-日）</span><br><span class="line">    # # order只能是：&quot;ASC&quot;  &quot;DESC&quot;</span><br><span class="line">    # # 并获取转换后的时间</span><br><span class="line">    # - year: 年 - 01 - 01</span><br><span class="line">    # - month: 年 - 月 - 01</span><br><span class="line">    # - day: 年 - 月 - 日</span><br><span class="line"></span><br><span class="line"># models.DatePlus.objects.dates(&apos;ctime&apos;, &apos;day&apos;, &apos;DESC&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># datetimes()</span><br><span class="line">    # 根据时间进行某一部分进行去重查找并截取指定内容，将时间转换为指定时区时间</span><br><span class="line">    # kind只能是 &quot;year&quot;, &quot;month&quot;, &quot;day&quot;, &quot;hour&quot;, &quot;minute&quot;, &quot;second&quot;</span><br><span class="line">    # order只能是：&quot;ASC&quot;  &quot;DESC&quot;</span><br><span class="line">    # tzinfo时区对象</span><br><span class="line">    # models.DDD.objects.datetimes(&apos;ctime&apos;, &apos;hour&apos;, tzinfo=pytz.UTC)</span><br><span class="line">    # models.DDD.objects.datetimes(&apos;ctime&apos;, &apos;hour&apos;, tzinfo=pytz.timezone(&apos;Asia/Shanghai&apos;))</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">    pip3 install pytz</span><br><span class="line">    import pytz</span><br><span class="line">    pytz.all_timezones</span><br><span class="line">    pytz.timezone(‘Asia/Shanghai’)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># none()</span><br><span class="line"># 取空</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.none()</span><br><span class="line">print(v)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># aggregate()</span><br><span class="line"></span><br><span class="line">from django.db.models import Count,Avg,Max</span><br><span class="line"># 聚合整张表</span><br><span class="line">result = models.UserInfo.objects.aggregate(k=Count(&apos;id&apos;), n=Count(&apos;age&apos;))</span><br><span class="line">result = models.UserInfo.objects.aggregate(k=Count(&apos;id&apos;),n=Count(&apos;age&apos;,distinct=True))</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># count()</span><br><span class="line"># 计算个数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get()</span><br><span class="line">v = models.UserInfo.objects.all().first()</span><br><span class="line">v = models.UserInfo.objects.get(id=1) # 如果id=1 不存在 则会报错,找到多个也会报错</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># create()</span><br><span class="line"></span><br><span class="line">obj = models.UserInfo.objects.create(name=&apos;summer&apos;,age=23,pwd = &apos;ab456&apos;)</span><br><span class="line"># obj = models.UserInfo.objects.create(**&#123;&apos;name&apos;:&apos;summer&apos;,&apos;age&apos;:123,&apos;pwd&apos;:&apos;ab456&apos;&#125;)</span><br><span class="line">print(obj.id) #  可以获取添加数据的自增ID</span><br><span class="line"></span><br><span class="line"># 另外一种添加方法</span><br><span class="line">obj = models.UserInfo(name=&apos;autumn&apos;,age=23,pwd=&apos;ab123&apos;)</span><br><span class="line">obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># bulk_create() 批量添加</span><br><span class="line"></span><br><span class="line">objs = [</span><br><span class="line">    models.UserInfo(name=&apos;autumn&apos;,age=23,pwd=&apos;ab123&apos;),</span><br><span class="line">    models.UserInfo(name=&apos;autumn1&apos;, age=23, pwd=&apos;ab123&apos;)</span><br><span class="line">]</span><br><span class="line">models.UserInfo.objects.bulk_create(objs,10) # 10 代表一次提交10个对象 这个数最多别超过999</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get_or_create()  如果纯在则获取，否者创建</span><br><span class="line">obj, created = models.UserInfo.objects.get_or_create(name=&apos;summer1&apos;,</span><br><span class="line">                                                       defaults=&#123;&apos;age&apos;:123,&apos;pwd&apos;:&apos;ab456&apos;&#125;)</span><br><span class="line"># 先根据条件去查，如果存在name=&apos;summer1&apos;，则后面的default无效不执行。</span><br><span class="line">print(obj,created) # created 为True或False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># update_or_create() 如果存在，则更新，否则，创建</span><br><span class="line"></span><br><span class="line">obj, created = models.UserInfo.objects.update_or_create(name=&apos;summer1&apos;,</span><br><span class="line">                                                       defaults=&#123;&apos;age&apos;:123,&apos;pwd&apos;:&apos;ab456&apos;&#125;)</span><br><span class="line"></span><br><span class="line">print(obj,created)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># exists()</span><br><span class="line"># 检查查询结果是否存在，返回True或False</span><br><span class="line">result = models.UserInfo.objects.filter(id=1111).exists()</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># in_bulk</span><br><span class="line"># 根据主键进行查询。</span><br><span class="line"></span><br><span class="line">res = models.UserInfo.objects.in_bulk([1,2,3])</span><br><span class="line"># 相当于</span><br><span class="line">res2 = models.UserInfo.objects.filter(id__in=[1,2,3])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 如果需要的sql语句Django这个没有提供，可以用下面3中方法解决</span><br><span class="line"># extra</span><br><span class="line"># 原生sql</span><br><span class="line"># raw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># raw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = models.UserInfo.objects.raw(&apos;select id,name,age from app01_userinfo  where id &lt; 10&apos;)</span><br><span class="line">for item in res:</span><br><span class="line">    print(item.age,item.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 为原生SQL设置参数</span><br><span class="line">models.UserInfo.objects.raw(&apos;select id as nid from userinfo where nid&gt;%s&apos;, params=[12,])</span><br><span class="line"></span><br><span class="line"># 将获取的到列名转换为指定列名</span><br><span class="line">name_map = &#123;&apos;age&apos;: &apos;new_age&apos;, &apos;name&apos;: &apos;new_name&apos;&#125;</span><br><span class="line">r = models.UserInfo.objects.raw(&apos;SELECT * FROM app01_userinfo&apos;, translations=name_map)</span><br><span class="line">for i in r:</span><br><span class="line">    print(i.new_age)</span><br><span class="line"></span><br><span class="line"># 指定数据库</span><br><span class="line"># models.UserInfo.objects.raw(&apos;select * from userinfo&apos;, using=&quot;default&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;q = models.UserInfo.objects.all().filter(id__lt=60)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for row in q:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     print(row.id,row.name,row.ut.title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这样进行查询性能不好，需要重新发sql请求在进行查询另外一张表中的数据，如果有10条数据就要进行11次查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q = models.UserInfo.objects.all().values(&amp;apos;name&amp;apos;,&amp;apos;id&amp;apos;,&amp;apos;ut__title&amp;apos;).filter(id__lt=60)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for i in q:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     print(i[&amp;apos;name&amp;apos;],i[&amp;apos;ut__title&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 这样 进行了 优化 不回重复发送sql请求，到的结果内是字典&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q = models.UserInfo.objects.all().select_related(&amp;apos;ut&amp;apos;).filter(id__lt=60)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(q.query)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# for row in q:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     print(row.id,row.name,row.ut.title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# select_related(&amp;apos;ut&amp;apos;) 相当 于 inner join 先连成一张表再进行查询&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-ORM进阶操作01</title>
    <link href="http://midsummer.com/2016/11/08/Django-ORM%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C01/"/>
    <id>http://midsummer.com/2016/11/08/Django-ORM进阶操作01/</id>
    <published>2016-11-08T01:31:27.000Z</published>
    <updated>2017-11-15T02:45:16.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.filter(id__gt=1)</span><br><span class="line">models.UserInfo.objects.filter(id__lt=1)</span><br><span class="line">models.UserInfo.objects.filter(id__lte=1)</span><br><span class="line">models.UserInfo.objects.filter(id__gte=1)</span><br><span class="line">models.UserInfo.objects.filter(id__in=[1,2,3])</span><br><span class="line">models.UserInfo.objects.filter(id__range=[1,2])</span><br><span class="line">models.UserInfo.objects.filter(name__startswith=&apos;au&apos;)</span><br><span class="line">models.UserInfo.objects.filter(name__contains=&apos;au&apos;) # 包含</span><br><span class="line">models.UserInfo.objects.exclude(id=1) # 排除，除去括号内的条件之外的内容。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-增删改查"><a href="#1-增删改查" class="headerlink" title="1.增删改查"></a>1.增删改查</h3><h3 id="2-一般操作"><a href="#2-一般操作" class="headerlink" title="2.一般操作:"></a>2.一般操作:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.filter(id__gt=1)</span><br><span class="line">models.UserInfo.objects.filter(id__lt=1)</span><br><span class="line">models.UserInfo.objects.filter(id__lte=1)</span><br><span class="line">models.UserInfo.objects.filter(id__gte=1)</span><br><span class="line">models.UserInfo.objects.filter(id__in=[1,2,3])</span><br><span class="line">models.UserInfo.objects.filter(id__range=[1,2])</span><br><span class="line">models.UserInfo.objects.filter(name__startswith=&apos;au&apos;)</span><br><span class="line">models.UserInfo.objects.filter(name__contains=&apos;au&apos;) # 包含</span><br><span class="line">models.UserInfo.objects.exclude(id=1) # 排除，除去括号内的条件之外的内容。</span><br></pre></td></tr></table></figure><hr><h3 id="3-排序"><a href="#3-排序" class="headerlink" title="3.排序:"></a>3.排序:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user_object_list = models.UserInfo.objects.all().order_by(&apos;id&apos;) # asc</span><br><span class="line"></span><br><span class="line">user_object_list = models.UserInfo.objects.all().order_by(&apos;-id&apos;) # desc</span><br><span class="line"></span><br><span class="line">user_object_list = models.UserInfo.objects.all().order_by(&apos;-id&apos;,&apos;name&apos;) # 如果遇到id相等 按name从小到大排序</span><br></pre></td></tr></table></figure><hr><h3 id="4-分组"><a href="#4-分组" class="headerlink" title="4.分组:"></a>4.分组:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from django.db.models import Count</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.values(&apos;ut_id&apos;).annotate(aa = Count(&apos;id&apos;))</span><br><span class="line">print(v.query)</span><br><span class="line"># SELECT &quot;app01_userinfo&quot;.&quot;ut_id&quot;, COUNT(&quot;app01_userinfo&quot;.&quot;id&quot;) AS &quot;aa&quot; FROM &quot;app01_userinfo&quot; GROUP BY &quot;app01_userinfo&quot;.&quot;ut_id&quot;</span><br><span class="line"></span><br><span class="line">for item in v:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line">v = models.UserInfo.objects.values(&apos;ut_id&apos;).annotate(aa = Count(&apos;id&apos;)).filter(aa__gte=2)</span><br><span class="line">v = models.UserInfo.objects.filter(id__gt=2).values(&apos;ut_id&apos;).annotate(aa = Count(&apos;id&apos;)).filter(aa__gte=2)</span><br><span class="line"># filter()放在前面相等于where 放在annotate后相当于having</span><br></pre></td></tr></table></figure><hr><h3 id="5-F，Q，extra"><a href="#5-F，Q，extra" class="headerlink" title="5.F，Q，extra"></a>5.F，Q，extra</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">   # F 更新时获取原变量数值</span><br><span class="line"></span><br><span class="line">   from django.db.models import F,Q</span><br><span class="line"></span><br><span class="line">   models.UserInfo.objects.all().update(age=F(&apos;age&apos;)+1)</span><br><span class="line"></span><br><span class="line">   user_List = models.UserInfo.objects.filter(id__lt=20).values(&apos;age&apos;)</span><br><span class="line">   for row in user_List:</span><br><span class="line">       print(row[&apos;age&apos;])</span><br><span class="line">   from django.db.models import Q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">models.UserInfo.objects.filter(id=1,name=&apos;spring&apos;)</span><br><span class="line">   condition = &#123;</span><br><span class="line">       &apos;id&apos;:1,</span><br><span class="line">       &apos;name&apos;:&apos;spring&apos;,</span><br><span class="line">   &#125;</span><br><span class="line">   v = models.UserInfo.objects.filter(**condition)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   from django.db.models import Q</span><br><span class="line"></span><br><span class="line"># Q 用于构造复杂的查询条件</span><br><span class="line"></span><br><span class="line">   # Q 的第一种写法</span><br><span class="line">   models.UserInfo.objects.filter(Q(id=1))</span><br><span class="line">   models.UserInfo.objects.filter(Q(id=1) | Q(id=2))</span><br><span class="line">   models.UserInfo.objects.filter(Q(id=3) &amp; Q(id=4))</span><br><span class="line"></span><br><span class="line">   # Q 的第二种写法</span><br><span class="line">   q1 = Q()</span><br><span class="line">   q1.connector = &apos;OR&apos;</span><br><span class="line">   q1.children.append((&apos;id&apos;,1))</span><br><span class="line">   q1.children.append((&apos;id&apos;,10))</span><br><span class="line">   q1.children.append((&apos;id&apos;,9))</span><br><span class="line"></span><br><span class="line">   q2 = Q()</span><br><span class="line">   q2.connector = &apos;OR&apos;</span><br><span class="line">   q2.children.append((&apos;ut_id&apos;,1))</span><br><span class="line">   q2.children.append((&apos;ut_id&apos;,2))</span><br><span class="line"></span><br><span class="line">   con = Q()</span><br><span class="line">   con.add(q1,&apos;AND&apos;)</span><br><span class="line">   con.add(q2,&apos;AND&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># extra  额外条件查询以及相关表，排序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.all().extra(select=&#123;&apos;n&apos;:&apos;select count(1) from app01_userinfo&apos;&#125;)</span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.all().extra(select=&#123;&apos;n&apos;:&apos;select count(1) from app01_userinfo WHERE id &gt; 100&apos;&#125;)</span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.all().extra(select=&#123;&apos;n&apos;:&apos;select count(1) from app01_userinfo WHERE id &gt; %s&apos;&#125;,select_params=[100,])</span><br><span class="line">   v = models.UserInfo.objects.all().extra(select=&#123;&apos;n&apos;:&apos;select count(1) from app01_userinfo WHERE id = %s or id = %s&apos; &#125;,select_params=[100,201])</span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.all().extra(select=&#123;</span><br><span class="line">   &apos;n&apos;:&apos;select count(1) from app01_userinfo WHERE id = %s or id = %s&apos; ,</span><br><span class="line">   &apos;m&apos;:&apos;select count(1) from app01_userinfo WHERE id = %s or id = %s&apos; ,</span><br><span class="line">   &#125;,</span><br><span class="line">   select_params=[3,4,100,201])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.extra(</span><br><span class="line">       where=[&apos;id=%s or id=2&apos;,&apos;name=%s&apos;],</span><br><span class="line">       params=[1,&apos;summer&apos;],</span><br><span class="line">       order_by=[&apos;-id&apos;]</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   v = models.UserInfo.objects.extra(</span><br><span class="line">       tables=[&apos;app01_usertype&apos;],  # 笛卡尔基</span><br><span class="line">       where=[&apos;app01_usertype.id = app01_userinfo.ut_id&apos;]</span><br><span class="line">   )</span><br></pre></td></tr></table></figure><h3 id="原生SQL语句"><a href="#原生SQL语句" class="headerlink" title="原生SQL语句"></a>原生SQL语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">setting.py</span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;,</span><br><span class="line">        &apos;NAME&apos;: os.path.join(BASE_DIR, &apos;db.sqlite3&apos;),</span><br><span class="line">    &#125;,</span><br><span class="line">    &apos;db2&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;db2&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;&apos;,</span><br><span class="line">        &apos;HOST&apos;: &apos;&apos;,</span><br><span class="line">        &apos;PORT&apos;: &apos;&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 原生 SQL语句</span><br><span class="line"></span><br><span class="line">    from django.db import connection,connections</span><br><span class="line">    cursor = connection.cursor() # 用默认default的数据库</span><br><span class="line">    cursor = connections[&apos;db2&apos;].cursor() # 使用db2 数据库</span><br><span class="line"></span><br><span class="line">    cursor.execute(&apos;select * from app01_userinfo WHERE id = %s&apos;,[1,])</span><br><span class="line"></span><br><span class="line">    row = cursor.fetchone()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__gt=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__lt=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__lte=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__gte=1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__in=[1,2,3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(id__range=[1,2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(name__startswith=&amp;apos;au&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.filter(name__contains=&amp;apos;au&amp;apos;) # 包含&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;models.UserInfo.objects.exclude(id=1) # 排除，除去括号内的条件之外的内容。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django基础-ORM基本操作</title>
    <link href="http://midsummer.com/2016/10/09/Django%E5%9F%BA%E7%A1%80-ORM%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://midsummer.com/2016/10/09/Django基础-ORM基本操作/</id>
    <published>2016-10-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>ORM：操作表：</p><ul><li>创建表</li><li>修改表( 在SQLAchemy中不能进行修改表操作)</li><li>删除表</li></ul></li><li><p>ORM：操作数据行：</p><ul><li>增删改查</li></ul></li><li><p>配置</p></li></ul><a id="more"></a><h3 id="Django基础-ORM基本操作"><a href="#Django基础-ORM基本操作" class="headerlink" title="Django基础-ORM基本操作"></a>Django基础-ORM基本操作</h3><p>####ORM操作</p><ul><li><p>ORM：操作表：</p><ul><li>创建表</li><li>修改表( 在SQLAchemy中不能进行修改表操作)</li><li>删除表</li></ul></li><li><p>ORM：操作数据行：</p><ul><li>增删改查</li></ul></li><li><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 创建数据库</span><br><span class="line"></span><br><span class="line">2. 配置 修改 settings.py</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">    &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">    &apos;NAME&apos;:&apos;dbname&apos;,</span><br><span class="line">    &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">    &apos;PASSWORD&apos;: &apos;xxx&apos;,</span><br><span class="line">    &apos;HOST&apos;: &apos;&apos;,</span><br><span class="line">    &apos;PORT&apos;: &apos;&apos;,</span><br><span class="line">    &#125;</span><br><span class="line"># 由于Django内部连接MySQL时使用的是MySQLdb模块，而python3中还无此模块，所以需要使用pymysql来代替</span><br><span class="line"></span><br><span class="line"># 如下设置放置的与project同名的配置的 __init__.py文件中</span><br><span class="line"></span><br><span class="line">3.</span><br><span class="line">import pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()　</span><br><span class="line"></span><br><span class="line">4.创建类</span><br><span class="line">from django.db import models</span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">    nid = models.BigAutoField(primary_key=True) # 如果不写 Django默认添加一列自增列</span><br><span class="line">    username = models.CharField(max_length=32)</span><br><span class="line">    password = models.CharField(max_length=64)</span><br><span class="line"></span><br><span class="line">5.在setting.py 里注册app</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;app01&apos;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">6. 创建数据库表</span><br><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line">python manage.py makemigrations:</span><br><span class="line">读取类的信息，在migations文件夹里生成配置文件。</span><br><span class="line">python manage.py migrate:</span><br><span class="line">拿着makemigrations生成的配置文件去生成数据库表的语句。</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 增加新的一列</span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">    nid = models.BigAutoField(primary_key=True)</span><br><span class="line">    username = models.CharField(max_length=32)</span><br><span class="line">    password = models.CharField(max_length=64)</span><br><span class="line">    age = models.IntegerField() # 增加的一列</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">➜  task003 git:(master) ✗ python3 manage.py makemigrations</span><br><span class="line">You are trying to add a non-nullable field &apos;age&apos; to userinfo without a default; we can&apos;t do that (the database needs something to populate existing rows).</span><br><span class="line">Please select a fix:</span><br><span class="line"> 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)</span><br><span class="line"> 2) Quit, and let me add a default in models.py</span><br><span class="line">Select an option:</span><br><span class="line"></span><br><span class="line">***新增加的一列要么 指定为空 要么 指定一个默认值</span><br><span class="line">    age = models.IntegerField(default=1)</span><br><span class="line">    # age = models.IntegerField(null=True)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 创建外键</span><br><span class="line"></span><br><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line">class UserGroup(models.Model):</span><br><span class="line">    title = models.CharField(max_length=32)</span><br><span class="line"></span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">    nid = models.BigAutoField(primary_key=True)</span><br><span class="line">    username = models.CharField(max_length=32)</span><br><span class="line">    password = models.CharField(max_length=64)</span><br><span class="line">    age = models.IntegerField(default=1)</span><br><span class="line">    ug = models.ForeignKey(&apos;UserGroup&apos;,null=True)</span><br><span class="line">    # 在数据库中 ug 这一列的名字 叫 ug_id</span><br></pre></td></tr></table></figure><hr><ul><li>数据库行相关操作:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 添加</span><br><span class="line">def index2(request):</span><br><span class="line">    from app01 import models</span><br><span class="line">    models.UserGroup.objects.create(title=&apos;销售部&apos;)</span><br><span class="line">    models.UserInfo.objects.create(</span><br><span class="line">    username=&apos;winter&apos;,</span><br><span class="line">    password=&apos;ab123456&apos;,</span><br><span class="line">    age=22,</span><br><span class="line">    ug_id =1</span><br><span class="line">)</span><br><span class="line">    return HttpResponse(&apos;ok&apos;)</span><br><span class="line"></span><br><span class="line"># 查找</span><br><span class="line"></span><br><span class="line">def index2(request):</span><br><span class="line">    from app01 import models</span><br><span class="line">    group_list = models.UserGroup.objects.all()</span><br><span class="line">    # group_list = models.UserGroup.objects.filter(id=1) # filter 相当于sql语句中的where</span><br><span class="line">    print(group_list)</span><br><span class="line">    for row in group_list:</span><br><span class="line">        print(row.id,row.title)</span><br><span class="line">    return render(request,&apos;index2.html&apos;,&#123;&apos;group_list&apos;:group_list&#125;)</span><br><span class="line"></span><br><span class="line"># 神奇的双下划线</span><br><span class="line">group_list = models.UserGroup.objects.filter(id=1)</span><br><span class="line">group_list = models.UserGroup.objects.filter(id=1).first()</span><br><span class="line">group_list = models.UserGroup.objects.filter(id__gt=1) # 大于</span><br><span class="line">group_list = models.UserGroup.objects.filter(id__lt=1) # 小于</span><br><span class="line"></span><br><span class="line"># 删除</span><br><span class="line">models.UserInfo.objects.filter(nid=1).delete()</span><br><span class="line"># 更新</span><br><span class="line">models.UserGroup.objects.filter(nid=1).update(title=&apos;技术部门&apos;)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># models.py</span><br><span class="line">class UserType(models.Model):</span><br><span class="line">    title = models.CharField(max_length=32)</span><br><span class="line"></span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">    name = models.CharField(max_length=32)</span><br><span class="line">    age = models.IntegerField()</span><br><span class="line">    ut = models.ForeignKey(&apos;UserType&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 正向操作</span><br><span class="line">    # result = models.UserInfo.objects.all()</span><br><span class="line">    # for row in result:</span><br><span class="line">    #     print(row.id,row.name,row.ut.title)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 反向操作</span><br><span class="line">    obj = models.UserType.objects.all().first()</span><br><span class="line">    print(obj.title)</span><br><span class="line">    print(&apos;-----&apos;)</span><br><span class="line">    for row in obj.userinfo_set.all():</span><br><span class="line">        print(row.name,row.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return HttpResponse(&apos;ok&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;ORM：操作表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建表&lt;/li&gt;
&lt;li&gt;修改表( 在SQLAchemy中不能进行修改表操作)&lt;/li&gt;
&lt;li&gt;删除表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ORM：操作数据行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增删改查&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-模版</title>
    <link href="http://midsummer.com/2016/10/09/Django-%E6%A8%A1%E7%89%88/"/>
    <id>http://midsummer.com/2016/10/09/Django-模版/</id>
    <published>2016-10-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>基本使用</li><li>母版</li><li>导入include</li><li>函数 - &gt; 不用加() 自动执行</li><li>模版自定义函数：<ul><li>simple_filter<ul><li>最多两个参数</li></ul></li><li>simple_tag<ul><li>参数个数限制</li></ul></li><li>simple_filter 可以做条件判断，simple_tag不行</li></ul></li></ul><a id="more"></a><ul><li>基本使用</li><li>母版</li><li>导入include</li><li>函数 - &gt; 不用加() 自动执行</li><li>模版自定义函数：<ul><li>simple_filter<ul><li>最多两个参数</li></ul></li><li>simple_tag<ul><li>参数个数限制</li></ul></li><li>simple_filter 可以做条件判断，simple_tag不行</li></ul></li></ul><hr><h3 id="母版"><a href="#母版" class="headerlink" title="母版"></a>母版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># menu.html 母版</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h3&gt;这是一个组件&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;标题：&lt;/div&gt;</span><br><span class="line">        &#123;% block xx %&#125;&#123;%  endblock %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"># test.html</span><br><span class="line"></span><br><span class="line">&#123;%  extends &apos;menu.html&apos; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block xx %&#125;</span><br><span class="line">    &lt;p&gt;hello!!&lt;/p&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 一般写3个block:css一个，内容一个，js一个</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &#123;% block css %&#125;&#123;% endblock %&#125;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h3&gt;这是一个组件&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;标题：&lt;/div&gt;</span><br><span class="line">        &#123;% block xx %&#125;&#123;%  endblock %&#125;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &#123;% block js %&#125;&#123;% endblock %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def test(request):</span><br><span class="line">    return render(request,&apos;test.html&apos;,&#123;</span><br><span class="line">        &apos;name2&apos;:&apos;autumn&apos;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"># pub.html</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h3&gt;这是一个组件&lt;/h3&gt;</span><br><span class="line">    &lt;div class=&quot;title&quot;&gt;标题：&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;内容:&#123;&#123; name2 &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"># test.html</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &#123;% include &apos;pub.html&apos; %&#125;</span><br><span class="line">    &lt;p&gt;-------&lt;/p&gt;</span><br><span class="line">    &#123;% include &apos;pub.html&apos; %&#125;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="模版自定义函数："><a href="#模版自定义函数：" class="headerlink" title="模版自定义函数："></a>模版自定义函数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def test(request):</span><br><span class="line">    return render(request,&apos;test.html&apos;,&#123;</span><br><span class="line">        &apos;userinfo&apos;:&#123;&apos;name&apos;:&apos;summer&apos;,&apos;age&apos;:23,&apos;sex&apos;:&apos;man&apos;&#125;,</span><br><span class="line">        &apos;name2&apos;:&apos;autumn&apos;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"># /app01/templatetags/xx.py</span><br><span class="line"></span><br><span class="line">from django import template</span><br><span class="line">register = template.Library()</span><br><span class="line"></span><br><span class="line">@register.filter</span><br><span class="line">def my_upper(value):</span><br><span class="line">    return value.upper()</span><br><span class="line"></span><br><span class="line"># simple_filter 只能最多传2个参数</span><br><span class="line">@register.filter</span><br><span class="line">def my_upper2(value,arg):</span><br><span class="line">    return value + arg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># simple_tag 没有参数限制</span><br><span class="line">@register.simple_tag</span><br><span class="line">def my_upper3(value,arg1,arg2,arg3):</span><br><span class="line">    return value + arg1 + arg2 + arg3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># simple_filter 可以做条件判断，simple_tag不行</span><br><span class="line">@register.filter</span><br><span class="line">def my_bool(value):</span><br><span class="line">    return False</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># test.html</span><br><span class="line"></span><br><span class="line">&#123;% load xx %&#125;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% for i in userinfo %&#125;</span><br><span class="line">            &lt;li&gt;&#123;&#123; i &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% for key in userinfo.keys %&#125;</span><br><span class="line">            &lt;li&gt;&#123;&#123; key &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% for value in userinfo.values %&#125;</span><br><span class="line">            &lt;li&gt;&#123;&#123; value &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &#123;% for k,v in userinfo.items %&#125;</span><br><span class="line">            &lt;li&gt;&#123;&#123; k &#125;&#125;--&#123;&#123; v &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;p&gt;&#123;&#123; name2|upper &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; name2|my_upper &#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">    // simple_filter</span><br><span class="line">    &lt;p&gt;&#123;&#123; name2|my_upper2:&apos; hello!&apos; &#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">    // simple_tag</span><br><span class="line">    &lt;p&gt;&#123;% my_upper3 name2 &apos;ddd&apos; &apos;hello!&apos; &apos;autumn&apos;  %&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">// simple_filter</span><br><span class="line">    &#123;% if name2|my_bool %&#125;</span><br><span class="line">        &lt;h3&gt;真&lt;/h3&gt;</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">        &lt;h3&gt;假&lt;/h3&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="自定义simple-tag-过程"><a href="#自定义simple-tag-过程" class="headerlink" title="自定义simple_tag 过程"></a>自定义simple_tag 过程</h3><pre><code>- a、在app中创建templatetags模块- b、创建任意 .py 文件，如：xx.py<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">#coding:utf-8</span><br><span class="line">from django import template</span><br><span class="line">from django.utils.safestring import mark_safe</span><br><span class="line"></span><br><span class="line">register = template.Library()</span><br><span class="line"></span><br><span class="line">@register.simple_tag</span><br><span class="line">def my_simple_time(v1,v2,v3):</span><br><span class="line">    return  v1 + v2 + v3</span><br><span class="line"></span><br><span class="line">@register.simple_tag</span><br><span class="line">def my_input(id,arg):</span><br><span class="line">    result = &quot;&lt;input type=&apos;text&apos; id=&apos;%s&apos; class=&apos;%s&apos; /&gt;&quot; %(id,arg,)</span><br><span class="line">    return mark_safe(result)</span><br></pre></td></tr></table></figure>- c、在使用自定义simple_tag的html文件中导入之前创建的 xx.py 文件名<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load xx %&#125;</span><br></pre></td></tr></table></figure>- d、使用simple_tag<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% my_simple_time 1 2 3%&#125;</span><br><span class="line">&#123;% my_input &apos;id_username&apos; &apos;hide&apos;%&#125;</span><br></pre></td></tr></table></figure>- e、在settings中配置当前app，不然django无法找到自定义的simple_tag　　<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;app01&apos;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;基本使用&lt;/li&gt;
&lt;li&gt;母版&lt;/li&gt;
&lt;li&gt;导入include&lt;/li&gt;
&lt;li&gt;函数 - &amp;gt; 不用加() 自动执行&lt;/li&gt;
&lt;li&gt;模版自定义函数：&lt;ul&gt;
&lt;li&gt;simple_filter&lt;ul&gt;
&lt;li&gt;最多两个参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;simple_tag&lt;ul&gt;
&lt;li&gt;参数个数限制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;simple_filter 可以做条件判断，simple_tag不行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django-内置分页</title>
    <link href="http://midsummer.com/2016/10/09/Django-%E5%86%85%E7%BD%AE%E5%88%86%E9%A1%B5/"/>
    <id>http://midsummer.com/2016/10/09/Django-内置分页/</id>
    <published>2016-10-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:54:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>def test(request):<br>    from django.core.paginator import Paginator, Page</p><pre><code>current_page = request.GET.get(&apos;page&apos;)user_list = models.UserInfo.objects.all()paginator = Paginator(user_list, 10)# per_page: 每页显示条目数量# count:    数据总个数</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">### ###</span><br></pre></td></tr></table></figure><p>def test(request):<br>    from django.core.paginator import Paginator, Page</p><pre><code>current_page = request.GET.get(&apos;page&apos;)user_list = models.UserInfo.objects.all()paginator = Paginator(user_list, 10)# per_page: 每页显示条目数量# count:    数据总个数# num_pages:总页数# page_range:总页数的索引范围，如: (1,10),(1,200)# page:     page对象try:    posts = paginator.page(current_page)except Exception as e:    posts = paginator.page(1)# has_next              是否有下一页# next_page_number      下一页页码# has_previous          是否有上一页# previous_page_number  上一页页码# object_list           分页之后的数据列表# number                当前页# paginator             paginator对象return render(request, &apos;test.html&apos;, {&apos;posts&apos;: posts})</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># test.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;% for row in posts.object_list %&#125;</span><br><span class="line">        &lt;li&gt;&#123;&#123; row.id &#125;&#125; - &#123;&#123; row.name &#125;&#125; - &#123;&#123; row.ut.title &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% if posts.has_previous %&#125;</span><br><span class="line">    &lt;a href=&quot;/test/?page=&#123;&#123; posts.previous_page_number &#125;&#125;&quot;&gt;上一页&lt;/a&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% for num in posts.paginator.page_range %&#125;</span><br><span class="line">    &lt;a href=&quot;/test/?page=&#123;&#123; num &#125;&#125;&quot;&gt;&#123;&#123; num &#125;&#125;&lt;/a&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if posts.has_next %&#125;</span><br><span class="line">    &lt;a href=&quot;/test/?page=&#123;&#123; posts.next_page_number &#125;&#125;&quot;&gt;下一页&lt;/a&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><ul><li>Djnago内置的分页 具有局限性, 默认 只能 显示全部页码,只适用于 上一页下一页。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;def test(request):&lt;br&gt;    from django.core.paginator import Paginator, Page&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;current_page = request.GET.get(&amp;apos;page&amp;apos
      
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Form select 框</title>
    <link href="http://midsummer.com/2016/09/19/Form%20select%20%E6%A1%86/"/>
    <id>http://midsummer.com/2016/09/19/Form select 框/</id>
    <published>2016-09-19T00:31:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Select框：</span><br><span class="line">单选</span><br><span class="line">cls_id = fields.IntegerField(</span><br><span class="line"># widget=widgets.Select(choices=[(1,&apos;上海&apos;),(2,&apos;北京&apos;)])</span><br><span class="line">widget=widgets.Select(choices=models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;),attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Form-select-框"><a href="#Form-select-框" class="headerlink" title="Form select 框"></a>Form select 框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Select框：</span><br><span class="line">单选</span><br><span class="line">cls_id = fields.IntegerField(</span><br><span class="line"># widget=widgets.Select(choices=[(1,&apos;上海&apos;),(2,&apos;北京&apos;)])</span><br><span class="line">widget=widgets.Select(choices=models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;),attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">cls_id = fields.ChoiceField(</span><br><span class="line">choices=models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;),</span><br><span class="line">widget=widgets.Select(attrs=&#123;&apos;class&apos;: &apos;form-control&apos;&#125;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = FooForm(&#123;&apos;cls_id&apos;:1&#125;)</span><br><span class="line">多选</span><br><span class="line">xx = fields.MultipleChoiceField(</span><br><span class="line">choices=models.Classes.objects.values_list(&apos;id&apos;,&apos;title&apos;),</span><br><span class="line">widget=widgets.SelectMultiple</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">obj = FooForm(&#123;&apos;cls_id&apos;:[1,2,3]&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Select框：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单选&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cls_id = fields.IntegerField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		# widget=widgets.Select(choices=[(1,&amp;apos;上海&amp;apos;),(2,&amp;apos;北京&amp;apos;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		widget=widgets.Select(choices=models.Classes.objects.values_list(&amp;apos;id&amp;apos;,&amp;apos;title&amp;apos;),attrs=&amp;#123;&amp;apos;class&amp;apos;: &amp;apos;form-control&amp;apos;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Form 文件上传</title>
    <link href="http://midsummer.com/2016/09/19/Form%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://midsummer.com/2016/09/19/Form 文件上传/</id>
    <published>2016-09-19T00:31:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># upload_file.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;/upload_file/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;fafafa&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Form-文件上传"><a href="#Form-文件上传" class="headerlink" title="Form 文件上传"></a>Form 文件上传</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># upload_file.html</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;/upload_file/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;fafafa&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># views.py</span><br><span class="line">def upload_file(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;upload_file.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(request.FILES)</span><br><span class="line">        print(request.FILES.get(&apos;fafafa&apos;))</span><br><span class="line"></span><br><span class="line">        file_obj = request.FILES.get(&apos;fafafa&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        print(file_obj.name)</span><br><span class="line">        print(file_obj.size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        f = open(os.path.join(&apos;static&apos;,file_obj.name),&apos;wb&apos;)</span><br><span class="line">        for chunk in file_obj.chunks():</span><br><span class="line">            f.write(chunk)</span><br><span class="line">        f.close()</span><br><span class="line">        return render(request, &apos;upload_file.html&apos;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# upload_file.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form action=&amp;quot;/upload_file/&amp;quot; method=&amp;quot;POST&amp;quot; enctype=&amp;quot;multipart/form-data&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% csrf_token %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;fafafa&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;提交&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Form 验证之钩子</title>
    <link href="http://midsummer.com/2016/09/09/Form%20%E9%AA%8C%E8%AF%81%E4%B9%8B%E9%92%A9%E5%AD%90/"/>
    <id>http://midsummer.com/2016/09/09/Form 验证之钩子/</id>
    <published>2016-09-09T00:31:27.000Z</published>
    <updated>2017-11-15T03:57:06.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># From验证源码</span><br><span class="line">def _clean_fields(self):</span><br><span class="line">    for name, field in self.fields.items():</span><br><span class="line">        # value_from_datadict() gets the data from the data dictionaries.</span><br><span class="line">        # Each widget type knows how to retrieve its own data, because some</span><br><span class="line">        # widgets split data over several HTML fields.</span><br><span class="line">        if field.disabled:</span><br><span class="line">            value = self.get_initial_for_field(field, name)</span><br><span class="line">        else:</span><br><span class="line">            value = field.widget.value_from_datadict(self.data, self.files, self.add_prefix(name))</span><br><span class="line">        try:</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Form-验证之钩子"><a href="#Form-验证之钩子" class="headerlink" title="Form 验证之钩子"></a>Form 验证之钩子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># From验证源码</span><br><span class="line">def _clean_fields(self):</span><br><span class="line">    for name, field in self.fields.items():</span><br><span class="line">        # value_from_datadict() gets the data from the data dictionaries.</span><br><span class="line">        # Each widget type knows how to retrieve its own data, because some</span><br><span class="line">        # widgets split data over several HTML fields.</span><br><span class="line">        if field.disabled:</span><br><span class="line">            value = self.get_initial_for_field(field, name)</span><br><span class="line">        else:</span><br><span class="line">            value = field.widget.value_from_datadict(self.data, self.files, self.add_prefix(name))</span><br><span class="line">        try:</span><br><span class="line">            if isinstance(field, FileField):</span><br><span class="line">                initial = self.get_initial_for_field(field, name)</span><br><span class="line">                value = field.clean(value, initial)</span><br><span class="line">            else:</span><br><span class="line">                value = field.clean(value)</span><br><span class="line">            self.cleaned_data[name] = value</span><br><span class="line">            if hasattr(self, &apos;clean_%s&apos; % name):</span><br><span class="line">                value = getattr(self, &apos;clean_%s&apos; % name)()</span><br><span class="line">                self.cleaned_data[name] = value</span><br><span class="line">        except ValidationError as e:</span><br><span class="line">            self.add_error(name, e)</span><br></pre></td></tr></table></figure><ul><li>验证过程 每一个字段过来 先进行正则匹配，没有问题 然后 hasattr 检查是否存在该字段的函数，纯在就执行该函数。</li></ul><hr><ul><li>对注册 添加钩子：如果用户存在，着返回错误。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from app01 import models</span><br><span class="line">from django.core.exceptions import ValidationError</span><br><span class="line">class TestForm(Form):</span><br><span class="line">    user = fields.CharField()</span><br><span class="line">    pwd = fields.CharField()</span><br><span class="line"></span><br><span class="line">    def clean_user(self):</span><br><span class="line">        val = self.cleaned_data[&apos;user&apos;]</span><br><span class="line">        if models.UserInfo.objects.filter(username=val).count():</span><br><span class="line">            raise ValidationError(&apos;用户名已经存在！&apos;)</span><br><span class="line">        else:</span><br><span class="line">            return self.cleaned_data[&apos;user&apos;]</span><br><span class="line">    def clean_pwd(self):</span><br><span class="line">        return self.cleaned_data[&apos;pwd&apos;]</span><br></pre></td></tr></table></figure></li></ul><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># From验证源码</span><br><span class="line">    def full_clean(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Cleans all of self.data and populates self._errors and</span><br><span class="line">        self.cleaned_data.</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        self._errors = ErrorDict()</span><br><span class="line">        if not self.is_bound:  # Stop further processing.</span><br><span class="line">            return</span><br><span class="line">        self.cleaned_data = &#123;&#125;</span><br><span class="line">        # If the form is permitted to be empty, and none of the form data has</span><br><span class="line">        # changed from the initial data, short circuit any validation.</span><br><span class="line">        if self.empty_permitted and not self.has_changed():</span><br><span class="line">            return</span><br><span class="line"></span><br><span class="line">        self._clean_fields()</span><br><span class="line">        self._clean_form()</span><br><span class="line">        self._post_clean()</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> def _clean_form(self):</span><br><span class="line">     try:</span><br><span class="line">         cleaned_data = self.clean()</span><br><span class="line">     except ValidationError as e:</span><br><span class="line">         self.add_error(None, e)</span><br><span class="line">     else:</span><br><span class="line">         if cleaned_data is not None:</span><br><span class="line">             self.cleaned_data = cleaned_data</span><br><span class="line"></span><br><span class="line">def clean(self):</span><br><span class="line"> &quot;&quot;&quot;</span><br><span class="line"> Hook for doing any extra form-wide cleaning after Field.clean() has been</span><br><span class="line"> called on every field. Any ValidationError raised by this method will</span><br><span class="line"> not be associated with a particular field; it will have a special-case</span><br><span class="line"> association with the field named &apos;__all__&apos;.</span><br><span class="line"> &quot;&quot;&quot;</span><br><span class="line"> return self.cleaned_data</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from app01 import models</span><br><span class="line">from django.core.exceptions import ValidationError</span><br><span class="line">class TestForm(Form):</span><br><span class="line">    user = fields.CharField()</span><br><span class="line">    pwd = fields.CharField()</span><br><span class="line"></span><br><span class="line">    def clean_user(self):</span><br><span class="line">        val = self.cleaned_data[&apos;user&apos;]</span><br><span class="line">        if models.UserInfo.objects.filter(username=val).count():</span><br><span class="line">            raise ValidationError(&apos;用户名已经存在！&apos;)</span><br><span class="line">        else:</span><br><span class="line">            return self.cleaned_data[&apos;user&apos;]</span><br><span class="line">    def clean_pwd(self):</span><br><span class="line"></span><br><span class="line">        return self.cleaned_data[&apos;pwd&apos;]</span><br><span class="line"></span><br><span class="line">    def clean(self):</span><br><span class="line">        # 这个时候cleaned_data里所有的值都获取到了，可以进行 比如用户名 密码的联合唯一操作</span><br><span class="line">        user = self.cleaned_data.get(&apos;user&apos;)</span><br><span class="line">        email = self.cleaned_data.get(&apos;email&apos;)</span><br><span class="line">        if models.Student.objects.filter(user=user,email=email)</span><br><span class="line">        raise ValidationError(&apos;用户名和邮箱已经联合已经存在！&apos;)</span><br><span class="line">        else:</span><br><span class="line">        return self.cleaned_data</span><br></pre></td></tr></table></figure><hr><ul><li>额外添加正则</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# From验证源码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def _clean_fields(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for name, field in self.fields.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # value_from_datadict() gets the data from the data dictionaries.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # Each widget type knows how to retrieve its own data, because some&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # widgets split data over several HTML fields.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if field.disabled:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value = self.get_initial_for_field(field, name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value = field.widget.value_from_datadict(self.data, self.files, self.add_prefix(name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>实现popup</title>
    <link href="http://midsummer.com/2016/07/09/%E5%AE%9E%E7%8E%B0popup/"/>
    <id>http://midsummer.com/2016/07/09/实现popup/</id>
    <published>2016-07-09T00:45:57.000Z</published>
    <updated>2017-11-15T03:58:59.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line">    user_group_list = models.Role.objects.all()</span><br><span class="line">    return render(request,&apos;test.html&apos;,&#123;&apos;user_group_list&apos;: user_group_list&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def add_test(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;add_test.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        popid = request.GET.get(&apos;popup&apos;)</span><br><span class="line">        if popid:</span><br><span class="line">            title = request.POST.get(&apos;title&apos;)</span><br><span class="line">            print(title,&apos;---------&apos;)</span><br><span class="line">            obj = models.Role.objects.create(name=title)</span><br><span class="line">            return render(request,&apos;popup_response.html&apos;,&#123;&apos;id&apos;:obj.id,&apos;title&apos;:obj.name,&apos;popid&apos;:popid&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="实现popup"><a href="#实现popup" class="headerlink" title="实现popup"></a>实现popup</h3><p>-<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line"></span><br><span class="line">def test(request):</span><br><span class="line">    user_group_list = models.Role.objects.all()</span><br><span class="line">    return render(request,&apos;test.html&apos;,&#123;&apos;user_group_list&apos;: user_group_list&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def add_test(request):</span><br><span class="line">    if request.method == &apos;GET&apos;:</span><br><span class="line">        return render(request,&apos;add_test.html&apos;)</span><br><span class="line">    else:</span><br><span class="line">        popid = request.GET.get(&apos;popup&apos;)</span><br><span class="line">        if popid:</span><br><span class="line">            title = request.POST.get(&apos;title&apos;)</span><br><span class="line">            print(title,&apos;---------&apos;)</span><br><span class="line">            obj = models.Role.objects.create(name=title)</span><br><span class="line">            return render(request,&apos;popup_response.html&apos;,&#123;&apos;id&apos;:obj.id,&apos;title&apos;:obj.name,&apos;popid&apos;:popid&#125;)</span><br></pre></td></tr></table></figure></p><p>-<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- test.html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;add-test&lt;/h3&gt;</span><br><span class="line">    &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &lt;select name=&quot;&quot; id=&quot;ugID&quot;&gt;</span><br><span class="line">            &#123;% for row in user_group_list %&#125;</span><br><span class="line">                &lt;option value=&quot;&#123;&#123; row.pk &#125;&#125;&quot;&gt;&#123;&#123; row.name &#125;&#125;&lt;/option&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; onclick=&quot;popupUrl(&apos;/add_test/?popup=ugID&apos;)&quot;&gt;添加&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function popupUrl(url) &#123;</span><br><span class="line">            window.open(url,&apos;x1&apos;,&apos;status=1,height:500,width:600,toolbar=0,resizeable=0&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        function popupCallBack1(popid,opid,optext) &#123;</span><br><span class="line">            var tag = document.createElement(&apos;option&apos;);</span><br><span class="line">            tag.innerHTML = optext;</span><br><span class="line">            tag.setAttribute(&apos;value&apos;,opid);</span><br><span class="line">            tag.setAttribute(&apos;selected&apos;,&apos;selected&apos;);</span><br><span class="line">            document.getElementById(popid).appendChild(tag)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- add_test.html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;添加数据&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form method=&quot;post&quot;&gt;</span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;a href=&quot;&quot; onclick=&quot;popupUrl(&apos;/xxxxx/&apos;)&quot;&gt;再发一个&lt;/a&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function popupUrl(url) &#123;</span><br><span class="line">            window.open(url,&apos;x2&apos;,&apos;status=1,height:500,width:600,toolbar=0,resizeable=0&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- popup_response.html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;正在关闭的pop页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        opener.popupCallBack1(&apos;&#123;&#123; popid &#125;&#125;&apos;,&apos;&#123;&#123; id &#125;&#125;&apos;,&apos;&#123;&#123; title &#125;&#125;&apos;);</span><br><span class="line">        window.close()</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# views.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def test(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user_group_list = models.Role.objects.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render(request,&amp;apos;test.html&amp;apos;,&amp;#123;&amp;apos;user_group_list&amp;apos;: user_group_list&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def add_test(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if request.method == &amp;apos;GET&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return render(request,&amp;apos;add_test.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        popid = request.GET.get(&amp;apos;popup&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if popid:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            title = request.POST.get(&amp;apos;title&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(title,&amp;apos;---------&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj = models.Role.objects.create(name=title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return render(request,&amp;apos;popup_response.html&amp;apos;,&amp;#123;&amp;apos;id&amp;apos;:obj.id,&amp;apos;title&amp;apos;:obj.name,&amp;apos;popid&amp;apos;:popid&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://midsummer.com/tags/Python/"/>
    
      <category term="Django" scheme="http://midsummer.com/tags/Django/"/>
    
  </entry>
  
</feed>
